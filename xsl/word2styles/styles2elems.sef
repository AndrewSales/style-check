<?xml version="1.0" encoding="utf-8"?>
<package xmlns='http://ns.saxonica.com/xslt/export' xmlns:fn='http://www.w3.org/2005/xpath-functions' xmlns:xs='http://www.w3.org/2001/XMLSchema' xmlns:vv='http://saxon.sf.net/generated-variable' xmlns:java-type='http://saxon.sf.net/java-type' when='2022-01-03T16:00:34.126292Z' id='0' version='20' packageVersion='1' saxonVersion='9.9.1.7' target='HE' targetVersion='1' relocatable='false' implicit='true'>
 <co id='0' binds='0'>
  <template name='Q{http://exslt.org/string}_split-characters' flags='os' line='42' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='1'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='43'>
    <param name='Q{}string' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='44'>
     <varRef name='Q{}string' slot='0'/>
     <sequence line='45'>
      <elem name='token' nsuri=''>
       <valueOf line='46' flags='l'>
        <fn name='substring'>
         <treat as='xs:string' diag='0|0||fn:substring'>
          <check card='?' diag='0|0||fn:substring'>
           <cvUntyped to='xs:string'>
            <data>
             <varRef name='Q{}string' slot='0'/>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <int val='1'/>
         <int val='1'/>
        </fn>
       </valueOf>
      </elem>
      <callT line='48' name='Q{http://exslt.org/string}_split-characters' bSlot='0' flags='t'>
       <withParam name='Q{}string' flags='c' as='xs:string'>
        <fn line='50' name='substring'>
         <treat as='xs:string' diag='0|0||fn:substring'>
          <check card='?' diag='0|0||fn:substring'>
           <cvUntyped to='xs:string'>
            <data>
             <varRef name='Q{}string' slot='0'/>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <int val='2'/>
        </fn>
       </withParam>
      </callT>
     </sequence>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='1' binds=''>
  <globalParam name='Q{}export-binary-data' type='item()*' line='24' module='file:/C:/Users/User/Documents/word2styles/params.xsl' visibility='PUBLIC'>
   <str val='0'/>
  </globalParam>
 </co>
 <co id='2' binds='3 4 2 2 2 2 2 2 2 2 5'>
  <template name='Q{}inline-styles' flags='os' line='58' module='file:/C:/Users/User/Documents/word2styles/inline.xsl' slots='8'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/inline.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='59'>
    <param name='Q{}style' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='60' name='Q{}bold' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <param line='61' name='Q{}italic' slot='2'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='2'/>
    </param>
    <param line='62' name='Q{}sc' slot='3'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='3'/>
    </param>
    <param line='63' name='Q{}ul' slot='4'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='4'/>
    </param>
    <param line='64' name='Q{}subSup' slot='5'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='5'/>
    </param>
    <param line='65' name='Q{}vanish' slot='6'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='6'/>
    </param>
    <param line='66' name='Q{}highlight' slot='7'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='7'/>
    </param>
    <choose line='70'>
     <gc op='!=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
      <data>
       <varRef name='Q{}style' slot='0'/>
      </data>
      <str val=''/>
     </gc>
     <sequence line='71'>
      <callT name='Q{}debug' bSlot='0'>
       <withParam name='Q{}msg' flags='c' as='document-node()'>
        <doc line='72' base='file:/C:/Users/User/Documents/word2styles/inline.xsl' flags='t' validation='preserve'>
         <valueOf flags='el'>
          <fn name='concat'>
           <str val='inline style='/>
           <fn name='string-join'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <data>
              <mergeAdj>
               <varRef name='Q{}style' slot='0'/>
              </mergeAdj>
             </data>
            </convert>
            <str val=' '/>
           </fn>
           <str val=' path='/>
           <fn name='string'>
            <fn name='path'>
             <treat as='node()' diag='0|0||fn:path'>
              <dot flags='a'/>
             </treat>
            </fn>
           </fn>
          </fn>
         </valueOf>
        </doc>
       </withParam>
      </callT>
      <compElem line='74'>
       <fn role='name' name='concat'>
        <str val='Text.'/>
        <fn name='string-join'>
         <convert from='xs:anyAtomicType' to='xs:string'>
          <data>
           <mergeAdj>
            <varRef name='Q{}style' slot='0'/>
           </mergeAdj>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </fn>
       <sequence role='content' line='75'>
        <choose>
         <varRef name='Q{}vanish' slot='6'/>
         <att line='76' name='display' flags='l'>
          <str val='0'/>
         </att>
        </choose>
        <callT line='79' name='Q{}xpath-loc' bSlot='1'>
         <withParam name='Q{}node' flags='c' as='item()'>
          <dot line='80' flags='a'/>
         </withParam>
        </callT>
        <callT line='83' name='Q{}inline-styles' bSlot='2'>
         <withParam name='Q{}bold' flags='c'>
          <varRef line='84' name='Q{}bold' slot='1'/>
         </withParam>
         <withParam name='Q{}italic' flags='c'>
          <varRef line='85' name='Q{}italic' slot='2'/>
         </withParam>
         <withParam name='Q{}sc' flags='c'>
          <varRef line='86' name='Q{}sc' slot='3'/>
         </withParam>
         <withParam name='Q{}ul' flags='c'>
          <varRef line='87' name='Q{}ul' slot='4'/>
         </withParam>
         <withParam name='Q{}subSup' flags='c'>
          <varRef line='88' name='Q{}subSup' slot='5'/>
         </withParam>
         <withParam name='Q{}highlight' flags='c'>
          <varRef line='89' name='Q{}highlight' slot='7'/>
         </withParam>
        </callT>
       </sequence>
      </compElem>
     </sequence>
     <varRef line='94' name='Q{}bold' slot='1'/>
     <elem line='95' name='b' nsuri=''>
      <sequence line='96'>
       <choose>
        <gc op='=' card='N:1' comp='CCC'>
         <data>
          <slash simple='2'>
           <treat as='node()' diag='1|0|XPTY0019|/'>
            <varRef name='Q{}bold' slot='1'/>
           </treat>
           <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
          </slash>
         </data>
         <str val='off'/>
        </gc>
        <att line='97' name='off' flags='l'>
         <str val='yes'/>
        </att>
       </choose>
       <callT line='104' name='Q{}inline-styles' bSlot='3'>
        <withParam name='Q{}italic' flags='c'>
         <varRef line='105' name='Q{}italic' slot='2'/>
        </withParam>
        <withParam name='Q{}sc' flags='c'>
         <varRef line='106' name='Q{}sc' slot='3'/>
        </withParam>
        <withParam name='Q{}ul' flags='c'>
         <varRef line='107' name='Q{}ul' slot='4'/>
        </withParam>
        <withParam name='Q{}subSup' flags='c'>
         <varRef line='108' name='Q{}subSup' slot='5'/>
        </withParam>
        <withParam name='Q{}highlight' flags='c'>
         <varRef line='109' name='Q{}highlight' slot='7'/>
        </withParam>
       </callT>
      </sequence>
     </elem>
     <varRef line='114' name='Q{}italic' slot='2'/>
     <elem line='115' name='i' nsuri=''>
      <sequence line='116'>
       <choose>
        <gc op='=' card='N:1' comp='CCC'>
         <data>
          <slash simple='2'>
           <treat as='node()' diag='1|0|XPTY0019|/'>
            <varRef name='Q{}italic' slot='2'/>
           </treat>
           <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
          </slash>
         </data>
         <str val='off'/>
        </gc>
        <att line='117' name='off' flags='l'>
         <str val='yes'/>
        </att>
       </choose>
       <callT line='124' name='Q{}inline-styles' bSlot='4'>
        <withParam name='Q{}sc' flags='c'>
         <varRef line='125' name='Q{}sc' slot='3'/>
        </withParam>
        <withParam name='Q{}ul' flags='c'>
         <varRef line='126' name='Q{}ul' slot='4'/>
        </withParam>
        <withParam name='Q{}subSup' flags='c'>
         <varRef line='127' name='Q{}subSup' slot='5'/>
        </withParam>
        <withParam name='Q{}highlight' flags='c'>
         <varRef line='128' name='Q{}highlight' slot='7'/>
        </withParam>
       </callT>
      </sequence>
     </elem>
     <varRef line='133' name='Q{}sc' slot='3'/>
     <elem line='134' name='sc' nsuri=''>
      <callT line='140' name='Q{}inline-styles' bSlot='5'>
       <withParam name='Q{}ul' flags='c'>
        <varRef line='141' name='Q{}ul' slot='4'/>
       </withParam>
       <withParam name='Q{}subSup' flags='c'>
        <varRef line='142' name='Q{}subSup' slot='5'/>
       </withParam>
       <withParam name='Q{}highlight' flags='c'>
        <varRef line='143' name='Q{}highlight' slot='7'/>
       </withParam>
      </callT>
     </elem>
     <varRef line='148' name='Q{}ul' slot='4'/>
     <elem line='149' name='ul' nsuri=''>
      <callT line='155' name='Q{}inline-styles' bSlot='6'>
       <withParam name='Q{}subSup' flags='c'>
        <varRef line='156' name='Q{}subSup' slot='5'/>
       </withParam>
       <withParam name='Q{}highlight' flags='c'>
        <varRef line='157' name='Q{}highlight' slot='7'/>
       </withParam>
      </callT>
     </elem>
     <varRef line='162' name='Q{}subSup' slot='5'/>
     <choose line='164'>
      <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
       <data>
        <varRef name='Q{}subSup' slot='5'/>
       </data>
       <str val='superscript'/>
      </gc>
      <elem line='165' name='sup' nsuri=''>
       <callT line='171' name='Q{}inline-styles' bSlot='7'/>
      </elem>
      <gc line='174' op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
       <data>
        <varRef name='Q{}subSup' slot='5'/>
       </data>
       <str val='subscript'/>
      </gc>
      <elem line='175' name='sub' nsuri=''>
       <callT line='181' name='Q{}inline-styles' bSlot='8'>
        <withParam name='Q{}highlight' flags='c'>
         <varRef line='182' name='Q{}highlight' slot='7'/>
        </withParam>
       </callT>
      </elem>
     </choose>
     <varRef line='191' name='Q{}highlight' slot='7'/>
     <elem line='192' name='highlight' nsuri=''>
      <sequence>
       <att name='colour' flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <slash simple='2'>
            <treat as='node()' diag='1|0|XPTY0019|/'>
             <varRef name='Q{}highlight' slot='7'/>
            </treat>
            <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
           </slash>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </att>
       <callT line='193' name='Q{}inline-styles' bSlot='9'/>
      </sequence>
     </elem>
     <true/>
     <applyT line='200' flags='t' bSlot='10'>
      <filter role='select' flags='b'>
       <slash simple='1'>
        <treat as='node()' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()'/>
       </slash>
       <and op='and'>
        <fn name='empty'>
         <axis name='self' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}fldChar)'/>
        </fn>
        <fn name='empty'>
         <axis name='self' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}instrText)'/>
        </fn>
       </and>
      </filter>
     </applyT>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='6' binds='7'>
  <globalVariable name='Q{}css-pi' type='document-node()' line='21' module='file:/C:/Users/User/Documents/word2styles/variables.xsl' visibility='PRIVATE'>
   <doc baseUri='file:/C:/Users/User/Documents/word2styles/variables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='21' base='file:/C:/Users/User/Documents/word2styles/variables.xsl' flags='t' validation='preserve'>
    <sequence>
     <valueOf flags='Sl'>
      <str val='href=&#39;'/>
     </valueOf>
     <valueOf flags='l'>
      <fn name='string-join'>
       <convert from='xs:anyAtomicType' to='xs:string'>
        <data>
         <mergeAdj>
          <gVarRef name='Q{}debugging-css-sys-id' bSlot='0'/>
         </mergeAdj>
        </data>
       </convert>
       <str val=' '/>
      </fn>
     </valueOf>
     <valueOf flags='l'>
      <str val='&#39; type=&#39;text/css&#39;'/>
     </valueOf>
    </sequence>
   </doc>
  </globalVariable>
 </co>
 <co id='7' binds=''>
  <globalParam name='Q{}debugging-css-sys-id' type='item()*' line='30' module='file:/C:/Users/User/Documents/word2styles/params.xsl' visibility='PUBLIC'>
   <str val='debug-simplified-wordml.css'/>
  </globalParam>
 </co>
 <co id='8' binds='9 3 3 3'>
  <template name='Q{}has-vmerge-in-same-column' flags='os' line='226' module='file:/C:/Users/User/Documents/word2styles/tables.xsl' slots='4'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/tables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='227'>
    <param name='Q{}next-row-vmerges' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='229' name='Q{}namest' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <param line='230' name='Q{}nameend' slot='2'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='2'/>
    </param>
    <forEach line='232'>
     <varRef name='Q{}next-row-vmerges' slot='0'/>
     <let line='233' var='Q{}colnum' as='document-node()' slot='3' eval='16'>
      <doc line='234' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' validation='preserve'>
       <callT name='Q{}colnum' bSlot='0'/>
      </doc>
      <sequence line='237'>
       <callT name='Q{}debug' bSlot='1'>
        <withParam name='Q{}msg' flags='c' as='document-node()'>
         <doc line='238' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' flags='t' validation='preserve'>
          <sequence>
           <valueOf flags='l'>
            <str val='colnum for merged cell in next row='/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:untypedAtomic' to='xs:string'>
             <data>
              <varRef name='Q{}colnum' slot='3'/>
             </data>
            </convert>
           </valueOf>
          </sequence>
         </doc>
        </withParam>
       </callT>
       <callT line='240' name='Q{}debug' bSlot='2'>
        <withParam name='Q{}msg' flags='c' as='document-node()'>
         <doc line='241' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' flags='t' validation='preserve'>
          <sequence>
           <valueOf flags='Sl'>
            <str val='$namest='/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <first>
              <data>
               <varRef name='Q{}namest' slot='1'/>
              </data>
             </first>
            </convert>
           </valueOf>
          </sequence>
         </doc>
        </withParam>
       </callT>
       <callT line='243' name='Q{}debug' bSlot='3'>
        <withParam name='Q{}msg' flags='c' as='document-node()'>
         <doc line='244' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' flags='t' validation='preserve'>
          <sequence>
           <valueOf flags='Sl'>
            <str val='$nameend='/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <first>
              <data>
               <varRef name='Q{}nameend' slot='2'/>
              </data>
             </first>
            </convert>
           </valueOf>
          </sequence>
         </doc>
        </withParam>
       </callT>
       <choose line='248'>
        <and op='and'>
         <gc10 op='&gt;=' cardinality='many-to-many (1.0)' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
          <varRef name='Q{}colnum' slot='3'/>
          <varRef name='Q{}namest' slot='1'/>
         </gc10>
         <gc10 op='&lt;=' cardinality='many-to-many (1.0)' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
          <varRef name='Q{}colnum' slot='3'/>
          <varRef name='Q{}nameend' slot='2'/>
         </gc10>
        </and>
        <valueOf line='249'>
         <str val='true'/>
        </valueOf>
        <true/>
        <valueOf line='251'>
         <str val='false'/>
        </valueOf>
       </choose>
      </sequence>
     </let>
    </forEach>
   </sequence>
  </template>
 </co>
 <co id='10' binds='0 11'>
  <template name='Q{http://exslt.org/string}split' flags='os' line='18' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='2'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='20'>
    <param name='Q{}string' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='22' name='Q{}pattern' slot='1'>
     <str role='select' val=' '/>
     <supplied role='conversion' slot='1'/>
    </param>
    <choose line='24'>
     <fn name='not'>
      <varRef name='Q{}string' slot='0'/>
     </fn>
     <empty/>
     <fn line='25' name='not'>
      <varRef name='Q{}pattern' slot='1'/>
     </fn>
     <callT line='26' name='Q{http://exslt.org/string}_split-characters' bSlot='0' flags='t'>
      <withParam name='Q{}string' flags='c'>
       <varRef line='28' name='Q{}string' slot='0'/>
      </withParam>
     </callT>
     <true/>
     <callT line='32' name='Q{http://exslt.org/string}_split-pattern' bSlot='1' flags='t'>
      <withParam name='Q{}string' flags='c'>
       <varRef line='34' name='Q{}string' slot='0'/>
      </withParam>
      <withParam name='Q{}pattern' flags='c'>
       <varRef line='36' name='Q{}pattern' slot='1'/>
      </withParam>
     </callT>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='9' binds='3 3 3 3'>
  <template name='Q{}colnum' flags='os' line='197' module='file:/C:/Users/User/Documents/word2styles/tables.xsl' slots='4'>
   <let role='body' baseUri='file:/C:/Users/User/Documents/word2styles/tables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='198' var='Q{}gridspan-sum' as='xs:anyAtomicType' slot='0' eval='8'>
    <fn name='sum'>
     <data>
      <slash simple='2'>
       <slash simple='2'>
        <slash simple='2'>
         <docOrder intra='1'>
          <slash>
           <docOrder intra='1'>
            <slash simple='2'>
             <slash simple='1'>
              <treat as='node()' diag='14|9|XPTY0020|'>
               <dot flags='a'/>
              </treat>
              <axis name='parent' nodeTest='(document-node()|element())'/>
             </slash>
             <axis name='parent' nodeTest='(document-node()|element())'/>
            </slash>
           </docOrder>
           <fn name='reverse'>
            <axis name='preceding-sibling' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)'/>
           </fn>
          </slash>
         </docOrder>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)'/>
        </slash>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridSpan)'/>
       </slash>
       <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
      </slash>
     </data>
    </fn>
    <let line='199' var='Q{}gridspan-count' as='xs:integer' slot='1' eval='8'>
     <fn name='count'>
      <slash simple='2'>
       <slash simple='2'>
        <slash simple='2'>
         <docOrder intra='1'>
          <slash simple='2'>
           <docOrder intra='1'>
            <slash simple='2'>
             <slash simple='1'>
              <treat as='node()' diag='14|9|XPTY0020|'>
               <dot flags='a'/>
              </treat>
              <axis name='parent' nodeTest='(document-node()|element())'/>
             </slash>
             <axis name='parent' nodeTest='(document-node()|element())'/>
            </slash>
           </docOrder>
           <axis name='preceding-sibling' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)'/>
          </slash>
         </docOrder>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)'/>
        </slash>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridSpan)'/>
       </slash>
       <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
      </slash>
     </fn>
     <let line='200' var='Q{}preceding-cell-count' as='xs:integer' slot='2' eval='8'>
      <fn name='count'>
       <docOrder intra='1'>
        <slash simple='2'>
         <docOrder intra='1'>
          <slash simple='2'>
           <slash simple='1'>
            <treat as='node()' diag='14|9|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='parent' nodeTest='(document-node()|element())'/>
           </slash>
           <axis name='parent' nodeTest='(document-node()|element())'/>
          </slash>
         </docOrder>
         <axis name='preceding-sibling' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)'/>
        </slash>
       </docOrder>
      </fn>
      <sequence line='203'>
       <callT name='Q{}debug' bSlot='0'>
        <withParam name='Q{}msg' flags='c' as='document-node()'>
         <doc line='204' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' flags='t' validation='preserve'>
          <sequence>
           <valueOf flags='l'>
            <str val='getting colnum for element '/>
           </valueOf>
           <valueOf flags='l'>
            <fn name='name'>
             <treat as='node()' diag='0|0||fn:name'>
              <dot flags='a'/>
             </treat>
            </fn>
           </valueOf>
           <valueOf flags='Sl'>
            <str val='...'/>
           </valueOf>
          </sequence>
         </doc>
        </withParam>
       </callT>
       <callT line='206' name='Q{}debug' bSlot='1'>
        <withParam name='Q{}msg' flags='c' as='document-node()'>
         <doc line='207' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' flags='t' validation='preserve'>
          <sequence>
           <valueOf flags='l'>
            <str val='sum of gridSpans='/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <varRef name='Q{}gridspan-sum' slot='0'/>
            </convert>
           </valueOf>
          </sequence>
         </doc>
        </withParam>
       </callT>
       <callT line='209' name='Q{}debug' bSlot='2'>
        <withParam name='Q{}msg' flags='c' as='document-node()'>
         <doc line='210' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' flags='t' validation='preserve'>
          <sequence>
           <valueOf flags='l'>
            <str val='no of gridSpans specified='/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:integer' to='xs:string'>
             <varRef name='Q{}gridspan-count' slot='1'/>
            </convert>
           </valueOf>
          </sequence>
         </doc>
        </withParam>
       </callT>
       <callT line='212' name='Q{}debug' bSlot='3'>
        <withParam name='Q{}msg' flags='c' as='document-node()'>
         <doc line='213' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' flags='t' validation='preserve'>
          <sequence>
           <valueOf flags='l'>
            <str val='no of preceding cells='/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:integer' to='xs:string'>
             <varRef name='Q{}preceding-cell-count' slot='2'/>
            </convert>
           </valueOf>
          </sequence>
         </doc>
        </withParam>
       </callT>
       <valueOf line='216'>
        <convert from='xs:anyAtomicType' to='xs:string'>
         <arith10 op='+' calc='a+a'>
          <let var='Q{http://saxon.sf.net/}nn635884748' as='xs:anyAtomicType' slot='3' eval='16'>
           <arith10 op='-' calc='a-a'>
            <choose>
             <or op='or'>
              <or op='or'>
               <or op='or'>
                <or op='or'>
                 <or op='or'>
                  <instance of='xs:double?'>
                   <varRef name='Q{}gridspan-sum' slot='0'/>
                  </instance>
                  <instance of='xs:decimal?'>
                   <varRef name='Q{}gridspan-sum' slot='0'/>
                  </instance>
                 </or>
                 <instance of='xs:float?'>
                  <varRef name='Q{}gridspan-sum' slot='0'/>
                 </instance>
                </or>
                <instance of='xs:string?'>
                 <varRef name='Q{}gridspan-sum' slot='0'/>
                </instance>
               </or>
               <instance of='xs:untypedAtomic?'>
                <varRef name='Q{}gridspan-sum' slot='0'/>
               </instance>
              </or>
              <instance of='xs:boolean?'>
               <varRef name='Q{}gridspan-sum' slot='0'/>
              </instance>
             </or>
             <fn name='number'>
              <varRef name='Q{}gridspan-sum' slot='0'/>
             </fn>
             <true/>
             <varRef name='Q{}gridspan-sum' slot='0'/>
            </choose>
            <fn name='number'>
             <varRef name='Q{}gridspan-count' slot='1'/>
            </fn>
           </arith10>
           <choose>
            <or op='or'>
             <or op='or'>
              <or op='or'>
               <or op='or'>
                <or op='or'>
                 <instance of='xs:double?'>
                  <varRef name='Q{http://saxon.sf.net/}nn635884748' slot='3'/>
                 </instance>
                 <instance of='xs:decimal?'>
                  <varRef name='Q{http://saxon.sf.net/}nn635884748' slot='3'/>
                 </instance>
                </or>
                <instance of='xs:float?'>
                 <varRef name='Q{http://saxon.sf.net/}nn635884748' slot='3'/>
                </instance>
               </or>
               <instance of='xs:string?'>
                <varRef name='Q{http://saxon.sf.net/}nn635884748' slot='3'/>
               </instance>
              </or>
              <instance of='xs:untypedAtomic?'>
               <varRef name='Q{http://saxon.sf.net/}nn635884748' slot='3'/>
              </instance>
             </or>
             <instance of='xs:boolean?'>
              <varRef name='Q{http://saxon.sf.net/}nn635884748' slot='3'/>
             </instance>
            </or>
            <fn name='number'>
             <varRef name='Q{http://saxon.sf.net/}nn635884748' slot='3'/>
            </fn>
            <true/>
            <varRef name='Q{http://saxon.sf.net/}nn635884748' slot='3'/>
           </choose>
          </let>
          <fn name='number'>
           <varRef name='Q{}preceding-cell-count' slot='2'/>
          </fn>
         </arith10>
        </convert>
       </valueOf>
      </sequence>
     </let>
    </let>
   </let>
  </template>
 </co>
 <co id='11' binds='11'>
  <template name='Q{http://exslt.org/string}_split-pattern' flags='os' line='55' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='2'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='56'>
    <param name='Q{}string' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='57' name='Q{}pattern' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <choose line='59'>
     <fn name='contains'>
      <treat as='xs:string' diag='0|0||fn:contains'>
       <check card='?' diag='0|0||fn:contains'>
        <cvUntyped to='xs:string'>
         <data>
          <varRef name='Q{}string' slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <treat as='xs:string' diag='0|1||fn:contains'>
       <check card='?' diag='0|1||fn:contains'>
        <cvUntyped to='xs:string'>
         <data>
          <varRef name='Q{}pattern' slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </fn>
     <sequence line='60'>
      <choose>
       <fn name='not'>
        <fn name='starts-with'>
         <treat as='xs:string' diag='0|0||fn:starts-with'>
          <check card='?' diag='0|0||fn:starts-with'>
           <cvUntyped to='xs:string'>
            <data>
             <varRef name='Q{}string' slot='0'/>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <treat as='xs:string' diag='0|1||fn:starts-with'>
          <check card='?' diag='0|1||fn:starts-with'>
           <cvUntyped to='xs:string'>
            <data>
             <varRef name='Q{}pattern' slot='1'/>
            </data>
           </cvUntyped>
          </check>
         </treat>
        </fn>
       </fn>
       <elem line='61' name='token' nsuri=''>
        <valueOf line='62' flags='l'>
         <fn name='substring-before'>
          <treat as='xs:string' diag='0|0||fn:substring-before'>
           <check card='?' diag='0|0||fn:substring-before'>
            <cvUntyped to='xs:string'>
             <data>
              <varRef name='Q{}string' slot='0'/>
             </data>
            </cvUntyped>
           </check>
          </treat>
          <treat as='xs:string' diag='0|1||fn:substring-before'>
           <check card='?' diag='0|1||fn:substring-before'>
            <cvUntyped to='xs:string'>
             <data>
              <varRef name='Q{}pattern' slot='1'/>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </fn>
        </valueOf>
       </elem>
      </choose>
      <callT line='65' name='Q{http://exslt.org/string}_split-pattern' bSlot='0' flags='t'>
       <withParam name='Q{}string' flags='c' as='xs:string'>
        <fn line='67' name='substring-after'>
         <treat as='xs:string' diag='0|0||fn:substring-after'>
          <check card='?' diag='0|0||fn:substring-after'>
           <cvUntyped to='xs:string'>
            <data>
             <varRef name='Q{}string' slot='0'/>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <treat as='xs:string' diag='0|1||fn:substring-after'>
          <check card='?' diag='0|1||fn:substring-after'>
           <cvUntyped to='xs:string'>
            <data>
             <varRef name='Q{}pattern' slot='1'/>
            </data>
           </cvUntyped>
          </check>
         </treat>
        </fn>
       </withParam>
       <withParam name='Q{}pattern' flags='c'>
        <varRef line='69' name='Q{}pattern' slot='1'/>
       </withParam>
      </callT>
     </sequence>
     <true/>
     <elem line='73' name='token' nsuri=''>
      <valueOf line='74' flags='l'>
       <fn name='string-join'>
        <convert from='xs:anyAtomicType' to='xs:string'>
         <data>
          <mergeAdj>
           <varRef name='Q{}string' slot='0'/>
          </mergeAdj>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='12' binds=''>
  <template name='Q{}warn' flags='os' line='207' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='1'>
   <param role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='208' name='Q{}msg' slot='0'>
    <str role='select' val=''/>
    <supplied role='conversion' slot='0'/>
   </param>
  </template>
 </co>
 <co id='13' binds=''>
  <globalParam name='Q{}auto-generate-css' type='item()*' line='22' module='file:/C:/Users/User/Documents/word2styles/params.xsl' visibility='PUBLIC'>
   <true/>
  </globalParam>
 </co>
 <co id='14' binds=''>
  <template name='Q{}fatal-error' flags='os' line='217' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='1'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='218'>
    <param name='Q{}msg' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <message line='219'>
     <sequence role='select'>
      <valueOf flags='S'>
       <str val='[FATAL]:'/>
      </valueOf>
      <valueOf>
       <fn name='string-join'>
        <convert from='xs:anyAtomicType' to='xs:string'>
         <data>
          <mergeAdj>
           <varRef name='Q{}msg' slot='0'/>
          </mergeAdj>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </sequence>
     <str role='terminate' val='yes'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
   </sequence>
  </template>
 </co>
 <co id='4' binds=''>
  <template name='Q{}xpath-loc' flags='os' line='164' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='2'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='165'>
    <param name='Q{}node' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='166' name='Q{}pi-target' slot='1'>
     <str role='select' val='src-xpath-loc'/>
     <supplied role='conversion' slot='1'/>
    </param>
    <choose line='169'>
     <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
      <data>
       <varRef name='Q{}pi-target' slot='1'/>
      </data>
      <str val='symbol-not-found'/>
     </gc>
     <empty/>
     <true/>
     <att line='181' name='xpath'>
      <fn name='path'>
       <treat as='node()' diag='0|0||fn:path'>
        <check card='?' diag='0|0||fn:path'>
         <varRef name='Q{}node' slot='0'/>
        </check>
       </treat>
      </fn>
     </att>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='15' binds=''>
  <globalParam name='Q{}generate-debugging-css' type='item()*' line='29' module='file:/C:/Users/User/Documents/word2styles/params.xsl' visibility='PUBLIC'>
   <false/>
  </globalParam>
 </co>
 <co id='16' binds=''>
  <globalVariable name='Q{}chars' type='document-node()' line='32' module='file:/C:/Users/User/Documents/word2styles/variables.xsl' visibility='PRIVATE'>
   <doc baseUri='file:/C:/Users/User/Documents/word2styles/variables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='37' base='file:/C:/Users/User/Documents/word2styles/variables.xsl' validation='preserve'>
    <elem name='chars' nsuri='' flags='l' namespaces='w'>
     <sequence line='38'>
      <elem name='font' nsuri='' flags='l'>
       <sequence>
        <att name='name' flags='l'>
         <str val='Symbol'/>
        </att>
        <elem line='39' name='char' nsuri='' flags='l'>
         <sequence line='40'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F041'/>
           </valueOf>
          </elem>
          <elem line='41' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0391'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='43' name='char' nsuri='' flags='l'>
         <sequence line='44'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F042'/>
           </valueOf>
          </elem>
          <elem line='45' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0392'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='47' name='char' nsuri='' flags='l'>
         <sequence line='48'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F043'/>
           </valueOf>
          </elem>
          <elem line='49' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03a7'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='51' name='char' nsuri='' flags='l'>
         <sequence line='52'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F044'/>
           </valueOf>
          </elem>
          <elem line='53' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0394'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='55' name='char' nsuri='' flags='l'>
         <sequence line='56'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F045'/>
           </valueOf>
          </elem>
          <elem line='57' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0395'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='59' name='char' nsuri='' flags='l'>
         <sequence line='60'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F046'/>
           </valueOf>
          </elem>
          <elem line='61' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03a6'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='63' name='char' nsuri='' flags='l'>
         <sequence line='64'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F047'/>
           </valueOf>
          </elem>
          <elem line='65' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0393'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='67' name='char' nsuri='' flags='l'>
         <sequence line='68'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F048'/>
           </valueOf>
          </elem>
          <elem line='69' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0397'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='71' name='char' nsuri='' flags='l'>
         <sequence line='72'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F049'/>
           </valueOf>
          </elem>
          <elem line='73' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0399'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='75' name='char' nsuri='' flags='l'>
         <sequence line='76'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F04A'/>
           </valueOf>
          </elem>
          <elem line='77' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03d1'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='79' name='char' nsuri='' flags='l'>
         <sequence line='80'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F04B'/>
           </valueOf>
          </elem>
          <elem line='81' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='039a'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='83' name='char' nsuri='' flags='l'>
         <sequence line='84'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F04C'/>
           </valueOf>
          </elem>
          <elem line='85' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='039b'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='87' name='char' nsuri='' flags='l'>
         <sequence line='88'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F04D'/>
           </valueOf>
          </elem>
          <elem line='89' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='039c'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='91' name='char' nsuri='' flags='l'>
         <sequence line='92'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F04E'/>
           </valueOf>
          </elem>
          <elem line='93' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='039d'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='95' name='char' nsuri='' flags='l'>
         <sequence line='96'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F04F'/>
           </valueOf>
          </elem>
          <elem line='97' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='039f'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='99' name='char' nsuri='' flags='l'>
         <sequence line='100'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F050'/>
           </valueOf>
          </elem>
          <elem line='101' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03a0'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='103' name='char' nsuri='' flags='l'>
         <sequence line='104'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F051'/>
           </valueOf>
          </elem>
          <elem line='105' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0398'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='107' name='char' nsuri='' flags='l'>
         <sequence line='108'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F052'/>
           </valueOf>
          </elem>
          <elem line='109' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03a1'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='111' name='char' nsuri='' flags='l'>
         <sequence line='112'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F053'/>
           </valueOf>
          </elem>
          <elem line='113' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03a3'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='115' name='char' nsuri='' flags='l'>
         <sequence line='116'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F054'/>
           </valueOf>
          </elem>
          <elem line='117' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03a4'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='119' name='char' nsuri='' flags='l'>
         <sequence line='120'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F055'/>
           </valueOf>
          </elem>
          <elem line='121' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03a5'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='123' name='char' nsuri='' flags='l'>
         <sequence line='124'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F056'/>
           </valueOf>
          </elem>
          <elem line='125' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03c2'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='127' name='char' nsuri='' flags='l'>
         <sequence line='128'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F057'/>
           </valueOf>
          </elem>
          <elem line='129' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03a9'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='131' name='char' nsuri='' flags='l'>
         <sequence line='132'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F058'/>
           </valueOf>
          </elem>
          <elem line='133' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='039e'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='135' name='char' nsuri='' flags='l'>
         <sequence line='136'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F059'/>
           </valueOf>
          </elem>
          <elem line='137' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03a8'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='139' name='char' nsuri='' flags='l'>
         <sequence line='140'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F05A'/>
           </valueOf>
          </elem>
          <elem line='141' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0396'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='143' name='char' nsuri='' flags='l'>
         <sequence line='144'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F05B'/>
           </valueOf>
          </elem>
          <elem line='145' name='unicode' nsuri='' flags='l'>
           <sequence>
            <att name='literal' flags='l'>
             <str val='yes'/>
            </att>
            <valueOf flags='Sl'>
             <str val='['/>
            </valueOf>
           </sequence>
          </elem>
         </sequence>
        </elem>
        <elem line='147' name='char' nsuri='' flags='l'>
         <sequence line='148'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F05C'/>
           </valueOf>
          </elem>
          <elem line='149' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2234'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='151' name='char' nsuri='' flags='l'>
         <sequence line='152'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F05D'/>
           </valueOf>
          </elem>
          <elem line='153' name='unicode' nsuri='' flags='l'>
           <sequence>
            <att name='literal' flags='l'>
             <str val='yes'/>
            </att>
            <valueOf flags='Sl'>
             <str val=']'/>
            </valueOf>
           </sequence>
          </elem>
         </sequence>
        </elem>
        <elem line='155' name='char' nsuri='' flags='l'>
         <sequence line='156'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F05E'/>
           </valueOf>
          </elem>
          <elem line='157' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='22a5'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='159' name='char' nsuri='' flags='l'>
         <sequence line='160'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F05F'/>
           </valueOf>
          </elem>
          <elem line='161' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0305'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='163' name='char' nsuri='' flags='l'>
         <sequence line='164'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F060'/>
           </valueOf>
          </elem>
          <elem line='165' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0332'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='167' name='char' nsuri='' flags='l'>
         <sequence line='168'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F061'/>
           </valueOf>
          </elem>
          <elem line='169' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03b1'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='171' name='char' nsuri='' flags='l'>
         <sequence line='172'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F062'/>
           </valueOf>
          </elem>
          <elem line='173' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03b2'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='175' name='char' nsuri='' flags='l'>
         <sequence line='176'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F063'/>
           </valueOf>
          </elem>
          <elem line='177' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03c7'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='179' name='char' nsuri='' flags='l'>
         <sequence line='180'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F064'/>
           </valueOf>
          </elem>
          <elem line='181' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03b4'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='183' name='char' nsuri='' flags='l'>
         <sequence line='184'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F065'/>
           </valueOf>
          </elem>
          <elem line='185' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03b5'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='187' name='char' nsuri='' flags='l'>
         <sequence line='188'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F066'/>
           </valueOf>
          </elem>
          <elem line='189' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03d5'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='191' name='char' nsuri='' flags='l'>
         <sequence line='192'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F067'/>
           </valueOf>
          </elem>
          <elem line='193' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03b3'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='195' name='char' nsuri='' flags='l'>
         <sequence line='196'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F068'/>
           </valueOf>
          </elem>
          <elem line='197' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03b7'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='199' name='char' nsuri='' flags='l'>
         <sequence line='200'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F069'/>
           </valueOf>
          </elem>
          <elem line='201' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03b9'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='203' name='char' nsuri='' flags='l'>
         <sequence line='204'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F06A'/>
           </valueOf>
          </elem>
          <elem line='205' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03c6'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='207' name='char' nsuri='' flags='l'>
         <sequence line='208'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F06B'/>
           </valueOf>
          </elem>
          <elem line='209' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03ba'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='211' name='char' nsuri='' flags='l'>
         <sequence line='212'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F06C'/>
           </valueOf>
          </elem>
          <elem line='213' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03bb'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='215' name='char' nsuri='' flags='l'>
         <sequence line='216'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F06D'/>
           </valueOf>
          </elem>
          <elem line='217' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03bc'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='219' name='char' nsuri='' flags='l'>
         <sequence line='220'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F06E'/>
           </valueOf>
          </elem>
          <elem line='221' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03bd'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='223' name='char' nsuri='' flags='l'>
         <sequence line='224'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F06F'/>
           </valueOf>
          </elem>
          <elem line='225' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03bf'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='227' name='char' nsuri='' flags='l'>
         <sequence line='228'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F070'/>
           </valueOf>
          </elem>
          <elem line='229' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03c0'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='231' name='char' nsuri='' flags='l'>
         <sequence line='232'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F071'/>
           </valueOf>
          </elem>
          <elem line='233' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03b8'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='235' name='char' nsuri='' flags='l'>
         <sequence line='236'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F072'/>
           </valueOf>
          </elem>
          <elem line='237' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03c1'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='239' name='char' nsuri='' flags='l'>
         <sequence line='240'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F073'/>
           </valueOf>
          </elem>
          <elem line='241' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03c3'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='243' name='char' nsuri='' flags='l'>
         <sequence line='244'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F074'/>
           </valueOf>
          </elem>
          <elem line='245' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03c4'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='247' name='char' nsuri='' flags='l'>
         <sequence line='248'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F075'/>
           </valueOf>
          </elem>
          <elem line='249' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03c5'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='251' name='char' nsuri='' flags='l'>
         <sequence line='252'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F076'/>
           </valueOf>
          </elem>
          <elem line='253' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03d6'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='255' name='char' nsuri='' flags='l'>
         <sequence line='256'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F077'/>
           </valueOf>
          </elem>
          <elem line='257' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03c9'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='259' name='char' nsuri='' flags='l'>
         <sequence line='260'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F078'/>
           </valueOf>
          </elem>
          <elem line='261' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03be'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='263' name='char' nsuri='' flags='l'>
         <sequence line='264'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F079'/>
           </valueOf>
          </elem>
          <elem line='265' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03c8'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='267' name='char' nsuri='' flags='l'>
         <sequence line='268'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F07A'/>
           </valueOf>
          </elem>
          <elem line='269' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='3b6'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='271' name='char' nsuri='' flags='l'>
         <sequence line='272'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F07B'/>
           </valueOf>
          </elem>
          <elem line='273' name='unicode' nsuri='' flags='l'>
           <sequence>
            <att name='literal' flags='l'>
             <str val='yes'/>
            </att>
            <valueOf flags='Sl'>
             <str val='{'/>
            </valueOf>
           </sequence>
          </elem>
         </sequence>
        </elem>
        <elem line='275' name='char' nsuri='' flags='l'>
         <sequence line='276'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F07C'/>
           </valueOf>
          </elem>
          <elem line='277' name='unicode' nsuri='' flags='l'>
           <sequence>
            <att name='literal' flags='l'>
             <str val='yes'/>
            </att>
            <valueOf flags='Sl'>
             <str val='|'/>
            </valueOf>
           </sequence>
          </elem>
         </sequence>
        </elem>
        <elem line='279' name='char' nsuri='' flags='l'>
         <sequence line='280'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F07D'/>
           </valueOf>
          </elem>
          <elem line='281' name='unicode' nsuri='' flags='l'>
           <sequence>
            <att name='literal' flags='l'>
             <str val='yes'/>
            </att>
            <valueOf flags='Sl'>
             <str val='}'/>
            </valueOf>
           </sequence>
          </elem>
         </sequence>
        </elem>
        <elem line='283' name='char' nsuri='' flags='l'>
         <sequence line='284'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F07E'/>
           </valueOf>
          </elem>
          <elem line='285' name='unicode' nsuri='' flags='l'>
           <sequence>
            <att name='literal' flags='l'>
             <str val='yes'/>
            </att>
            <valueOf flags='Sl'>
             <str val='~'/>
            </valueOf>
           </sequence>
          </elem>
         </sequence>
        </elem>
        <elem line='425' name='char' nsuri='' flags='l'>
         <sequence line='426'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0A1'/>
           </valueOf>
          </elem>
          <elem line='427' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='03d2'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='429' name='char' nsuri='' flags='l'>
         <sequence line='430'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0A2'/>
           </valueOf>
          </elem>
          <elem line='431' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2032'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='433' name='char' nsuri='' flags='l'>
         <sequence line='434'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0A3'/>
           </valueOf>
          </elem>
          <elem line='435' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2264'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='437' name='char' nsuri='' flags='l'>
         <sequence line='438'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0A4'/>
           </valueOf>
          </elem>
          <elem line='439' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2215'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='441' name='char' nsuri='' flags='l'>
         <sequence line='442'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0A5'/>
           </valueOf>
          </elem>
          <elem line='443' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='221e'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='445' name='char' nsuri='' flags='l'>
         <sequence line='446'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0A6'/>
           </valueOf>
          </elem>
          <elem line='447' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0192'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='449' name='char' nsuri='' flags='l'>
         <sequence line='450'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0A7'/>
           </valueOf>
          </elem>
          <elem line='451' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2663'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='453' name='char' nsuri='' flags='l'>
         <sequence line='454'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0A8'/>
           </valueOf>
          </elem>
          <elem line='455' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2666'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='457' name='char' nsuri='' flags='l'>
         <sequence line='458'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0A9'/>
           </valueOf>
          </elem>
          <elem line='459' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2665'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='461' name='char' nsuri='' flags='l'>
         <sequence line='462'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0AA'/>
           </valueOf>
          </elem>
          <elem line='463' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2660'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='465' name='char' nsuri='' flags='l'>
         <sequence line='466'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0AB'/>
           </valueOf>
          </elem>
          <elem line='467' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2194'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='469' name='char' nsuri='' flags='l'>
         <sequence line='470'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0AC'/>
           </valueOf>
          </elem>
          <elem line='471' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2190'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='473' name='char' nsuri='' flags='l'>
         <sequence line='474'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0AD'/>
           </valueOf>
          </elem>
          <elem line='475' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2191'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='477' name='char' nsuri='' flags='l'>
         <sequence line='478'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0AE'/>
           </valueOf>
          </elem>
          <elem line='479' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2192'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='481' name='char' nsuri='' flags='l'>
         <sequence line='482'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0AF'/>
           </valueOf>
          </elem>
          <elem line='483' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2193'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='485' name='char' nsuri='' flags='l'>
         <sequence line='486'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0B0'/>
           </valueOf>
          </elem>
          <elem line='487' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='00b0'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='489' name='char' nsuri='' flags='l'>
         <sequence line='490'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0B1'/>
           </valueOf>
          </elem>
          <elem line='491' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='00b1'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='493' name='char' nsuri='' flags='l'>
         <sequence line='494'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0B2'/>
           </valueOf>
          </elem>
          <elem line='495' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2033'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='497' name='char' nsuri='' flags='l'>
         <sequence line='498'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0B3'/>
           </valueOf>
          </elem>
          <elem line='499' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2265'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='501' name='char' nsuri='' flags='l'>
         <sequence line='502'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0B4'/>
           </valueOf>
          </elem>
          <elem line='503' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='00d7'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='505' name='char' nsuri='' flags='l'>
         <sequence line='506'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0B5'/>
           </valueOf>
          </elem>
          <elem line='507' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='221d'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='509' name='char' nsuri='' flags='l'>
         <sequence line='510'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0B6'/>
           </valueOf>
          </elem>
          <elem line='511' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2202'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='513' name='char' nsuri='' flags='l'>
         <sequence line='514'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0B7'/>
           </valueOf>
          </elem>
          <elem line='515' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2219'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='517' name='char' nsuri='' flags='l'>
         <sequence line='518'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0B8'/>
           </valueOf>
          </elem>
          <elem line='519' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='00f7'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='521' name='char' nsuri='' flags='l'>
         <sequence line='522'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0B9'/>
           </valueOf>
          </elem>
          <elem line='523' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2260'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='525' name='char' nsuri='' flags='l'>
         <sequence line='526'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0BA'/>
           </valueOf>
          </elem>
          <elem line='527' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2261'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='529' name='char' nsuri='' flags='l'>
         <sequence line='530'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0BB'/>
           </valueOf>
          </elem>
          <elem line='531' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2248'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='533' name='char' nsuri='' flags='l'>
         <sequence line='534'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0BC'/>
           </valueOf>
          </elem>
          <elem line='535' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2026'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='537' name='char' nsuri='' flags='l'>
         <sequence line='538'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0BD'/>
           </valueOf>
          </elem>
          <elem line='539' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2223'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='541' name='char' nsuri='' flags='l'>
         <sequence line='542'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0BE'/>
           </valueOf>
          </elem>
          <elem line='543' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2212'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='545' name='char' nsuri='' flags='l'>
         <sequence line='546'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0BF'/>
           </valueOf>
          </elem>
          <elem line='547' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='21b2'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='549' name='char' nsuri='' flags='l'>
         <sequence line='550'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0C0'/>
           </valueOf>
          </elem>
          <elem line='551' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2135'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='553' name='char' nsuri='' flags='l'>
         <sequence line='554'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0C1'/>
           </valueOf>
          </elem>
          <elem line='555' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2111'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='557' name='char' nsuri='' flags='l'>
         <sequence line='558'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0C2'/>
           </valueOf>
          </elem>
          <elem line='559' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='211c'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='561' name='char' nsuri='' flags='l'>
         <sequence line='562'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0C3'/>
           </valueOf>
          </elem>
          <elem line='563' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2118'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='565' name='char' nsuri='' flags='l'>
         <sequence line='566'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0C4'/>
           </valueOf>
          </elem>
          <elem line='567' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2297'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='569' name='char' nsuri='' flags='l'>
         <sequence line='570'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0C5'/>
           </valueOf>
          </elem>
          <elem line='571' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2295'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='573' name='char' nsuri='' flags='l'>
         <sequence line='574'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0C6'/>
           </valueOf>
          </elem>
          <elem line='575' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2298'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='577' name='char' nsuri='' flags='l'>
         <sequence line='578'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0C7'/>
           </valueOf>
          </elem>
          <elem line='579' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2229'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='581' name='char' nsuri='' flags='l'>
         <sequence line='582'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0C8'/>
           </valueOf>
          </elem>
          <elem line='583' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='222a'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='585' name='char' nsuri='' flags='l'>
         <sequence line='586'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0C9'/>
           </valueOf>
          </elem>
          <elem line='587' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2283'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='589' name='char' nsuri='' flags='l'>
         <sequence line='590'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0CA'/>
           </valueOf>
          </elem>
          <elem line='591' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2287'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='593' name='char' nsuri='' flags='l'>
         <sequence line='594'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0CB'/>
           </valueOf>
          </elem>
          <elem line='595' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2284'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='597' name='char' nsuri='' flags='l'>
         <sequence line='598'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0CC'/>
           </valueOf>
          </elem>
          <elem line='599' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2282'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='601' name='char' nsuri='' flags='l'>
         <sequence line='602'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0CD'/>
           </valueOf>
          </elem>
          <elem line='603' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2286'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='605' name='char' nsuri='' flags='l'>
         <sequence line='606'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0CE'/>
           </valueOf>
          </elem>
          <elem line='607' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2208'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='609' name='char' nsuri='' flags='l'>
         <sequence line='610'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0CF'/>
           </valueOf>
          </elem>
          <elem line='611' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2209'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='613' name='char' nsuri='' flags='l'>
         <sequence line='614'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0D0'/>
           </valueOf>
          </elem>
          <elem line='615' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2220'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='617' name='char' nsuri='' flags='l'>
         <sequence line='618'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0D1'/>
           </valueOf>
          </elem>
          <elem line='619' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2207'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='621' name='char' nsuri='' flags='l'>
         <sequence line='622'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0D2'/>
           </valueOf>
          </elem>
          <elem line='623' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='00ae'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='625' name='char' nsuri='' flags='l'>
         <sequence line='626'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0D3'/>
           </valueOf>
          </elem>
          <elem line='627' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='00a9'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='629' name='char' nsuri='' flags='l'>
         <sequence line='630'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0D4'/>
           </valueOf>
          </elem>
          <elem line='631' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2122'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='633' name='char' nsuri='' flags='l'>
         <sequence line='634'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0D5'/>
           </valueOf>
          </elem>
          <elem line='635' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='220f'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='637' name='char' nsuri='' flags='l'>
         <sequence line='638'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0D6'/>
           </valueOf>
          </elem>
          <elem line='639' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='221a'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='641' name='char' nsuri='' flags='l'>
         <sequence line='642'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0D7'/>
           </valueOf>
          </elem>
          <elem line='643' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='00b7'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='645' name='char' nsuri='' flags='l'>
         <sequence line='646'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0D8'/>
           </valueOf>
          </elem>
          <elem line='647' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='00ac'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='649' name='char' nsuri='' flags='l'>
         <sequence line='650'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0D9'/>
           </valueOf>
          </elem>
          <elem line='651' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='22c0'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='653' name='char' nsuri='' flags='l'>
         <sequence line='654'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0DA'/>
           </valueOf>
          </elem>
          <elem line='655' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='22c1'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='657' name='char' nsuri='' flags='l'>
         <sequence line='658'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0DB'/>
           </valueOf>
          </elem>
          <elem line='659' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='21d4'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='661' name='char' nsuri='' flags='l'>
         <sequence line='662'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0DC'/>
           </valueOf>
          </elem>
          <elem line='663' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='21d0'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='665' name='char' nsuri='' flags='l'>
         <sequence line='666'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0DD'/>
           </valueOf>
          </elem>
          <elem line='667' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='21d1'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='669' name='char' nsuri='' flags='l'>
         <sequence line='670'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0DE'/>
           </valueOf>
          </elem>
          <elem line='671' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='21d2'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='673' name='char' nsuri='' flags='l'>
         <sequence line='674'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0DF'/>
           </valueOf>
          </elem>
          <elem line='675' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='21d3'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='677' name='char' nsuri='' flags='l'>
         <sequence line='678'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0E0'/>
           </valueOf>
          </elem>
          <elem line='679' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='25ca'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='681' name='char' nsuri='' flags='l'>
         <sequence line='682'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0E1'/>
           </valueOf>
          </elem>
          <elem line='683' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2329'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='685' name='char' nsuri='' flags='l'>
         <sequence line='686'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0E2'/>
           </valueOf>
          </elem>
          <elem line='687' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='00ae'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='689' name='char' nsuri='' flags='l'>
         <sequence line='690'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0E3'/>
           </valueOf>
          </elem>
          <elem line='691' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='00a9'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='693' name='char' nsuri='' flags='l'>
         <sequence line='694'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0E4'/>
           </valueOf>
          </elem>
          <elem line='695' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2122'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='697' name='char' nsuri='' flags='l'>
         <sequence line='698'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0E5'/>
           </valueOf>
          </elem>
          <elem line='699' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='2211'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='701' name='char' nsuri='' flags='l'>
         <sequence line='702'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0E6'/>
           </valueOf>
          </elem>
          <elem line='703' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='705' name='char' nsuri='' flags='l'>
         <sequence line='706'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0E7'/>
           </valueOf>
          </elem>
          <elem line='707' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='709' name='char' nsuri='' flags='l'>
         <sequence line='710'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0E8'/>
           </valueOf>
          </elem>
          <elem line='711' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='713' name='char' nsuri='' flags='l'>
         <sequence line='714'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0E9'/>
           </valueOf>
          </elem>
          <elem line='715' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='717' name='char' nsuri='' flags='l'>
         <sequence line='718'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0EA'/>
           </valueOf>
          </elem>
          <elem line='719' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='721' name='char' nsuri='' flags='l'>
         <sequence line='722'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0EB'/>
           </valueOf>
          </elem>
          <elem line='723' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='725' name='char' nsuri='' flags='l'>
         <sequence line='726'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0EC'/>
           </valueOf>
          </elem>
          <elem line='727' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='729' name='char' nsuri='' flags='l'>
         <sequence line='730'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0ED'/>
           </valueOf>
          </elem>
          <elem line='731' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='733' name='char' nsuri='' flags='l'>
         <sequence line='734'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0EE'/>
           </valueOf>
          </elem>
          <elem line='735' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='737' name='char' nsuri='' flags='l'>
         <sequence line='738'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0EF'/>
           </valueOf>
          </elem>
          <elem line='739' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='742' name='char' nsuri='' flags='l'>
         <sequence line='743'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0F1'/>
           </valueOf>
          </elem>
          <elem line='744' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='232a'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='746' name='char' nsuri='' flags='l'>
         <sequence line='747'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0F2'/>
           </valueOf>
          </elem>
          <elem line='748' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='0283'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='750' name='char' nsuri='' flags='l'>
         <sequence line='751'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0F3'/>
           </valueOf>
          </elem>
          <elem line='752' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='754' name='char' nsuri='' flags='l'>
         <sequence line='755'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0F4'/>
           </valueOf>
          </elem>
          <elem line='756' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='758' name='char' nsuri='' flags='l'>
         <sequence line='759'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0F5'/>
           </valueOf>
          </elem>
          <elem line='760' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='762' name='char' nsuri='' flags='l'>
         <sequence line='763'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0F6'/>
           </valueOf>
          </elem>
          <elem line='764' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='766' name='char' nsuri='' flags='l'>
         <sequence line='767'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0F7'/>
           </valueOf>
          </elem>
          <elem line='768' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='770' name='char' nsuri='' flags='l'>
         <sequence line='771'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0F8'/>
           </valueOf>
          </elem>
          <elem line='772' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='774' name='char' nsuri='' flags='l'>
         <sequence line='775'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0F9'/>
           </valueOf>
          </elem>
          <elem line='776' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='778' name='char' nsuri='' flags='l'>
         <sequence line='779'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0FA'/>
           </valueOf>
          </elem>
          <elem line='780' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='782' name='char' nsuri='' flags='l'>
         <sequence line='783'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0FB'/>
           </valueOf>
          </elem>
          <elem line='784' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='786' name='char' nsuri='' flags='l'>
         <sequence line='787'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0FC'/>
           </valueOf>
          </elem>
          <elem line='788' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='790' name='char' nsuri='' flags='l'>
         <sequence line='791'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0FD'/>
           </valueOf>
          </elem>
          <elem line='792' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
        <elem line='794' name='char' nsuri='' flags='l'>
         <sequence line='795'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F0FE'/>
           </valueOf>
          </elem>
          <elem line='796' name='unicode' nsuri='' flags='l' namespaces='w'>
           <empty/>
          </elem>
         </sequence>
        </elem>
       </sequence>
      </elem>
      <elem line='800' name='font' nsuri='' flags='l'>
       <sequence>
        <att name='name' flags='l'>
         <str val='ParliamentarySymbols'/>
        </att>
        <elem line='801' name='char' nsuri='' flags='l'>
         <sequence line='802'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='002A'/>
           </valueOf>
          </elem>
          <elem line='803' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='002A'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='805' name='char' nsuri='' flags='l'>
         <sequence line='806'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F02A'/>
           </valueOf>
          </elem>
          <elem line='807' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='002A'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
        <elem line='809' name='char' nsuri='' flags='l'>
         <sequence line='810'>
          <elem name='word' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='F02B'/>
           </valueOf>
          </elem>
          <elem line='811' name='unicode' nsuri='' flags='l'>
           <valueOf flags='Sl'>
            <str val='002B'/>
           </valueOf>
          </elem>
         </sequence>
        </elem>
       </sequence>
      </elem>
     </sequence>
    </elem>
   </doc>
  </globalVariable>
 </co>
 <co id='17' binds=''>
  <template name='Q{}error' flags='os' line='212' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='1'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='213'>
    <param name='Q{}msg' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <message line='214'>
     <sequence role='select'>
      <valueOf flags='S'>
       <str val='[error]:'/>
      </valueOf>
      <valueOf>
       <fn name='string-join'>
        <convert from='xs:anyAtomicType' to='xs:string'>
         <data>
          <mergeAdj>
           <varRef name='Q{}msg' slot='0'/>
          </mergeAdj>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </sequence>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
   </sequence>
  </template>
 </co>
 <co id='18' binds='3 16 3 12 4 12 4 12'>
  <template name='Q{}symbol' flags='os' line='26' module='file:/C:/Users/User/Documents/word2styles/word-utils.xsl' slots='4'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/word-utils.xsl' ns='xsl=~ asdp=http://ns.andrewsales.com/xslt/functions xs=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='27'>
    <param name='Q{}font' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='28' name='Q{}char' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <param line='29' name='Q{}origin-node' slot='2'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='2'/>
    </param>
    <callT line='32' name='Q{}debug' bSlot='0'>
     <withParam name='Q{}msg' flags='c' as='document-node()'>
      <doc line='33' base='file:/C:/Users/User/Documents/word2styles/word-utils.xsl' flags='t' validation='preserve'>
       <sequence>
        <valueOf flags='l'>
         <str val='getting value for character '/>
        </valueOf>
        <valueOf flags='l'>
         <fn name='string-join'>
          <convert from='xs:anyAtomicType' to='xs:string'>
           <data>
            <mergeAdj>
             <varRef name='Q{}char' slot='1'/>
            </mergeAdj>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </valueOf>
       </sequence>
      </doc>
     </withParam>
    </callT>
    <let line='36' var='Q{}unicode-value' as='element(Q{}unicode)*' slot='3' eval='4'>
     <docOrder intra='1'>
      <slash simple='2'>
       <slash simple='2'>
        <filter flags='b'>
         <fn name='key'>
          <str val='word-chars'/>
          <data>
           <varRef name='Q{}char' slot='1'/>
          </data>
          <gVarRef name='Q{}chars' bSlot='1'/>
         </fn>
         <gc op='=' card='M:N' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
          <data>
           <slash simple='2'>
            <slash simple='2'>
             <axis name='parent' nodeTest='(document-node()|element())'/>
             <axis name='parent' nodeTest='(document-node()|element())'/>
            </slash>
            <axis name='attribute' nodeTest='attribute(Q{}name)'/>
           </slash>
          </data>
          <data>
           <varRef name='Q{}font' slot='0'/>
          </data>
         </gc>
        </filter>
        <axis name='parent' nodeTest='(document-node()|element())'/>
       </slash>
       <axis name='child' nodeTest='element(Q{}unicode)'/>
      </slash>
     </docOrder>
     <sequence line='38'>
      <callT name='Q{}debug' bSlot='2'>
       <withParam name='Q{}msg' flags='c' as='document-node()'>
        <doc line='39' base='file:/C:/Users/User/Documents/word2styles/word-utils.xsl' flags='t' validation='preserve'>
         <sequence>
          <valueOf flags='l'>
           <str val='found &#39;'/>
          </valueOf>
          <valueOf flags='l'>
           <fn name='string-join'>
            <convert from='xs:untypedAtomic' to='xs:string'>
             <data>
              <varRef name='Q{}unicode-value' slot='3'/>
             </data>
            </convert>
            <str val=' '/>
           </fn>
          </valueOf>
          <valueOf flags='Sl'>
           <str val='&#39;'/>
          </valueOf>
         </sequence>
        </doc>
       </withParam>
      </callT>
      <choose line='44'>
       <fn name='empty'>
        <varRef name='Q{}unicode-value' slot='3'/>
       </fn>
       <sequence line='45'>
        <callT name='Q{}warn' bSlot='3'>
         <withParam name='Q{}msg' flags='c' as='document-node()'>
          <doc line='46' base='file:/C:/Users/User/Documents/word2styles/word-utils.xsl' flags='t' validation='preserve'>
           <sequence>
            <valueOf flags='l'>
             <str val='unmapped symbol: '/>
            </valueOf>
            <valueOf flags='l'>
             <fn name='string-join'>
              <convert from='xs:anyAtomicType' to='xs:string'>
               <data>
                <mergeAdj>
                 <varRef name='Q{}char' slot='1'/>
                </mergeAdj>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </valueOf>
            <valueOf flags='l'>
             <str val='; font='/>
            </valueOf>
            <valueOf flags='l'>
             <fn name='string-join'>
              <convert from='xs:anyAtomicType' to='xs:string'>
               <data>
                <mergeAdj>
                 <varRef name='Q{}font' slot='0'/>
                </mergeAdj>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </valueOf>
           </sequence>
          </doc>
         </withParam>
        </callT>
        <callT line='48' name='Q{}xpath-loc' bSlot='4'>
         <withParam name='Q{}node' flags='c'>
          <varRef line='49' name='Q{}origin-node' slot='2'/>
         </withParam>
         <withParam name='Q{}pi-target' flags='c' as='xs:string'>
          <str val='symbol-not-found'/>
         </withParam>
        </callT>
        <elem line='52' name='symbol' nsuri=''>
         <sequence>
          <att name='font' flags='l'>
           <fn name='string-join'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <data>
              <mergeAdj>
               <varRef name='Q{}font' slot='0'/>
              </mergeAdj>
             </data>
            </convert>
            <str val=' '/>
           </fn>
          </att>
          <att name='value' flags='l'>
           <fn name='string-join'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <data>
              <mergeAdj>
               <varRef name='Q{}char' slot='1'/>
              </mergeAdj>
             </data>
            </convert>
            <str val=' '/>
           </fn>
          </att>
         </sequence>
        </elem>
       </sequence>
       <gc line='55' op='=' card='N:1' comp='CCC'>
        <data>
         <varRef name='Q{}unicode-value' slot='3'/>
        </data>
        <str val=''/>
       </gc>
       <sequence line='56'>
        <callT name='Q{}warn' bSlot='5'>
         <withParam name='Q{}msg' flags='c' as='document-node()'>
          <doc line='57' base='file:/C:/Users/User/Documents/word2styles/word-utils.xsl' flags='t' validation='preserve'>
           <sequence>
            <valueOf flags='l'>
             <str val='unmapped symbol: '/>
            </valueOf>
            <valueOf flags='l'>
             <fn name='string-join'>
              <convert from='xs:anyAtomicType' to='xs:string'>
               <data>
                <mergeAdj>
                 <varRef name='Q{}char' slot='1'/>
                </mergeAdj>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </valueOf>
            <valueOf flags='l'>
             <str val='; font='/>
            </valueOf>
            <valueOf flags='l'>
             <fn name='string-join'>
              <convert from='xs:anyAtomicType' to='xs:string'>
               <data>
                <mergeAdj>
                 <varRef name='Q{}font' slot='0'/>
                </mergeAdj>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </valueOf>
           </sequence>
          </doc>
         </withParam>
        </callT>
        <callT line='59' name='Q{}xpath-loc' bSlot='6'>
         <withParam name='Q{}node' flags='c'>
          <varRef line='60' name='Q{}origin-node' slot='2'/>
         </withParam>
         <withParam name='Q{}pi-target' flags='c' as='xs:string'>
          <str val='unmapped-symbol-omitted'/>
         </withParam>
        </callT>
        <elem line='63' name='symbol' nsuri=''>
         <sequence>
          <att name='font' flags='l'>
           <fn name='string-join'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <data>
              <mergeAdj>
               <varRef name='Q{}font' slot='0'/>
              </mergeAdj>
             </data>
            </convert>
            <str val=' '/>
           </fn>
          </att>
          <att name='value' flags='l'>
           <fn name='string-join'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <data>
              <mergeAdj>
               <varRef name='Q{}char' slot='1'/>
              </mergeAdj>
             </data>
            </convert>
            <str val=' '/>
           </fn>
          </att>
         </sequence>
        </elem>
       </sequence>
       <fn line='66' name='not'>
        <gc op='=' card='N:1' comp='CCC'>
         <data>
          <slash simple='2'>
           <varRef name='Q{}unicode-value' slot='3'/>
           <axis name='attribute' nodeTest='attribute(Q{}literal)'/>
          </slash>
         </data>
         <str val='yes'/>
        </gc>
       </fn>
       <sequence line='68'>
        <valueOf flags='d'>
         <str val='&amp;#x'/>
        </valueOf>
        <valueOf>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <varRef name='Q{}unicode-value' slot='3'/>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </valueOf>
        <valueOf flags='S'>
         <str val=';'/>
        </valueOf>
       </sequence>
       <gc line='72' op='=' card='N:1' comp='CCC'>
        <data>
         <slash simple='2'>
          <varRef name='Q{}unicode-value' slot='3'/>
          <axis name='attribute' nodeTest='attribute(Q{}literal)'/>
         </slash>
        </data>
        <str val='yes'/>
       </gc>
       <valueOf line='73'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <varRef name='Q{}unicode-value' slot='3'/>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
       <true/>
       <sequence line='77'>
        <callT name='Q{}warn' bSlot='7'>
         <withParam name='Q{}msg' flags='c' as='document-node()'>
          <doc line='78' base='file:/C:/Users/User/Documents/word2styles/word-utils.xsl' flags='t' validation='preserve'>
           <sequence>
            <valueOf flags='l'>
             <str val='unmapped symbol: '/>
            </valueOf>
            <valueOf flags='l'>
             <fn name='string-join'>
              <convert from='xs:anyAtomicType' to='xs:string'>
               <data>
                <mergeAdj>
                 <varRef name='Q{}char' slot='1'/>
                </mergeAdj>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </valueOf>
            <valueOf flags='l'>
             <str val='; font='/>
            </valueOf>
            <valueOf flags='l'>
             <fn name='string-join'>
              <convert from='xs:anyAtomicType' to='xs:string'>
               <data>
                <mergeAdj>
                 <varRef name='Q{}font' slot='0'/>
                </mergeAdj>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </valueOf>
           </sequence>
          </doc>
         </withParam>
        </callT>
        <elem line='80' name='symbol' nsuri=''>
         <sequence>
          <att name='font' flags='l'>
           <fn name='string-join'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <data>
              <mergeAdj>
               <varRef name='Q{}font' slot='0'/>
              </mergeAdj>
             </data>
            </convert>
            <str val=' '/>
           </fn>
          </att>
          <att name='value' flags='l'>
           <fn name='string-join'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <data>
              <mergeAdj>
               <varRef name='Q{}char' slot='1'/>
              </mergeAdj>
             </data>
            </convert>
            <str val=' '/>
           </fn>
          </att>
         </sequence>
        </elem>
       </sequence>
      </choose>
     </sequence>
    </let>
   </sequence>
  </template>
 </co>
 <co id='19' binds='20 20 21'>
  <template name='Q{}generate-debugging-css' flags='os' line='47' module='file:/C:/Users/User/Documents/word2styles/css.xsl' slots='0'>
   <resultDoc role='body' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='48' global='#&#xD;&#xA;#Mon Jan 03 16:00:34 GMT 2022&#xD;&#xA;doctype-system=style-schema.dtd&#xD;&#xA;indent=no&#xD;&#xA;' local='#&#xD;&#xA;#Mon Jan 03 16:00:34 GMT 2022&#xD;&#xA;method=text&#xD;&#xA;'>
    <gVarRef role='href' name='Q{http://saxon.sf.net/generated-variable}gg2095347181' bSlot='2'/>
    <sequence role='content' line='130'>
     <valueOf>
      <str val='/*&#xA;* This stylesheet is FOR DEBUGGING PURPOSES ONLY and is not designed to give an accurate rendering of content passed in!!&#xA;*&#xA;*/&#xA;&#xA;doc&#xA;{&#xA;  padding-left:2.88cm;&#xA;  padding-right:2.88cm&#xA;}&#xA;&#xA;footnote&#xA;{&#xA;  display:block&#xA;}&#xA;&#xA;symbol:before&#xA;{&#xA;  content:attr(value);&#xA;  background-color:yellow;&#xA;  vertical-align:super;&#xA;  font-size:x-small;&#xA;}&#xA;&#xA;p&#xA;{&#xA;  display:block&#xA;}&#xA;&#xA;/*  S T Y L E  */&#xA;&#xA;span[colour=&#39;yellow&#39;]&#xA;{&#xA;  background-color:yellow;&#xA;}&#xA;&#xA;span[display=&#39;0&#39;]&#xA;{&#xA;  display:none&#xA;}&#xA;i&#xA;{&#xA;  font-style:italic;&#xA;}&#xA;&#xA;b&#xA;{&#xA;  font-weight:bold&#xA;}&#xA;&#xA;sup&#xA;{&#xA;  vertical-align:super;&#xA;  font-size:x-small;&#xA;}&#xA;&#xA;sub&#xA;{&#xA;  vertical-align:sub;&#xA;  font-size:x-small;&#xA;}&#xA;&#xA;/*  T A B L E S  */&#xA;&#xA;row&#xA;{&#xA;  display:table-row;&#xA;}&#xA;&#xA;entry&#xA;{&#xA;  display:table-cell;&#xA;  padding:5px&#xA;}&#xA;&#xA;table&#xA;{&#xA;  display:table;&#xA;}&#xA;&#xA;/* PARAGRAPH STYLES */&#xA;&#xA;'/>
     </valueOf>
     <applyT mode='Q{}debugging-css' bSlot='0'>
      <sort role='select'>
       <filter role='select' flags='b'>
        <slash simple='2'>
         <slash simple='2'>
          <slash simple='1'>
           <treat as='node()' diag='14|3|XPTY0020|'>
            <dot flags='a'/>
           </treat>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}wordDocument)'/>
          </slash>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)'/>
         </slash>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
         </cast>
         <str val='paragraph'/>
        </vc>
       </filter>
       <sortKey line='131' comp='CCC'>
        <atomSing role='select' card='?' diag='4|0|XTTE1020|xsl:sort/select'>
         <slash simple='2'>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)'/>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </slash>
        </atomSing>
        <str role='order' val='ascending'/>
        <str role='lang' val=''/>
        <str role='caseOrder' val='#default'/>
        <str role='stable' val='yes'/>
        <str role='collation' val='http://www.w3.org/2005/xpath-functions/collation/codepoint'/>
       </sortKey>
      </sort>
     </applyT>
     <valueOf>
      <str val='&#xA;&#xA;/* CHARACTER STYLES */&#xA;&#xA;'/>
     </valueOf>
     <applyT line='135' mode='Q{}debugging-css' bSlot='1'>
      <sort role='select'>
       <filter role='select' flags='b'>
        <slash simple='2'>
         <slash simple='2'>
          <slash simple='1'>
           <treat as='node()' diag='14|3|XPTY0020|'>
            <dot flags='a'/>
           </treat>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}wordDocument)'/>
          </slash>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)'/>
         </slash>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
         </cast>
         <str val='character'/>
        </vc>
       </filter>
       <sortKey line='136' comp='CCC'>
        <atomSing role='select' card='?' diag='4|0|XTTE1020|xsl:sort/select'>
         <slash simple='2'>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)'/>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </slash>
        </atomSing>
        <str role='order' val='ascending'/>
        <str role='lang' val=''/>
        <str role='caseOrder' val='#default'/>
        <str role='stable' val='yes'/>
        <str role='collation' val='http://www.w3.org/2005/xpath-functions/collation/codepoint'/>
       </sortKey>
      </sort>
     </applyT>
    </sequence>
   </resultDoc>
  </template>
 </co>
 <co id='22' binds=''>
  <template name='Q{}info' flags='os' line='202' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='1'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='203'>
    <param name='Q{}msg' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <message line='204'>
     <sequence role='select'>
      <valueOf flags='S'>
       <str val='[info]:'/>
      </valueOf>
      <valueOf>
       <fn name='string-join'>
        <convert from='xs:anyAtomicType' to='xs:string'>
         <data>
          <mergeAdj>
           <varRef name='Q{}msg' slot='0'/>
          </mergeAdj>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </sequence>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
   </sequence>
  </template>
 </co>
 <co id='23' binds='24 24 25'>
  <template name='Q{}auto-generate-css' flags='os' line='27' module='file:/C:/Users/User/Documents/word2styles/css.xsl' slots='0'>
   <resultDoc role='body' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='28' global='#&#xD;&#xA;#Mon Jan 03 16:00:34 GMT 2022&#xD;&#xA;doctype-system=style-schema.dtd&#xD;&#xA;indent=no&#xD;&#xA;' local='#&#xD;&#xA;#Mon Jan 03 16:00:34 GMT 2022&#xD;&#xA;method=text&#xD;&#xA;'>
    <gVarRef role='href' name='Q{http://saxon.sf.net/generated-variable}gg1746093656' bSlot='2'/>
    <sequence role='content' line='30'>
     <valueOf>
      <str val='/* PARAGRAPH STYLES */&#xA;&#xA;'/>
     </valueOf>
     <applyT mode='Q{}css' bSlot='0'>
      <sort role='select'>
       <filter role='select' flags='b'>
        <slash simple='2'>
         <slash simple='2'>
          <slash simple='1'>
           <treat as='node()' diag='14|3|XPTY0020|'>
            <dot flags='a'/>
           </treat>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}wordDocument)'/>
          </slash>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)'/>
         </slash>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
         </cast>
         <str val='paragraph'/>
        </vc>
       </filter>
       <sortKey line='31' comp='CCC'>
        <atomSing role='select' card='?' diag='4|0|XTTE1020|xsl:sort/select'>
         <slash simple='2'>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)'/>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </slash>
        </atomSing>
        <str role='order' val='ascending'/>
        <str role='lang' val=''/>
        <str role='caseOrder' val='#default'/>
        <str role='stable' val='yes'/>
        <str role='collation' val='http://www.w3.org/2005/xpath-functions/collation/codepoint'/>
       </sortKey>
      </sort>
     </applyT>
     <valueOf>
      <str val='&#xA;&#xA;/* CHARACTER STYLES */&#xA;&#xA;'/>
     </valueOf>
     <applyT line='35' mode='Q{}css' bSlot='1'>
      <sort role='select'>
       <filter role='select' flags='b'>
        <slash simple='2'>
         <slash simple='2'>
          <slash simple='1'>
           <treat as='node()' diag='14|3|XPTY0020|'>
            <dot flags='a'/>
           </treat>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}wordDocument)'/>
          </slash>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)'/>
         </slash>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
         </cast>
         <str val='character'/>
        </vc>
       </filter>
       <sortKey line='36' comp='CCC'>
        <atomSing role='select' card='?' diag='4|0|XTTE1020|xsl:sort/select'>
         <slash simple='2'>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)'/>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </slash>
        </atomSing>
        <str role='order' val='ascending'/>
        <str role='lang' val=''/>
        <str role='caseOrder' val='#default'/>
        <str role='stable' val='yes'/>
        <str role='collation' val='http://www.w3.org/2005/xpath-functions/collation/codepoint'/>
       </sortKey>
      </sort>
     </applyT>
    </sequence>
   </resultDoc>
  </template>
 </co>
 <co id='26' binds='8 26'>
  <template name='Q{}morerows' flags='os' line='138' module='file:/C:/Users/User/Documents/word2styles/tables.xsl' slots='7'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/tables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='139'>
    <param name='Q{}next-row' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='140' name='Q{}namest' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <param line='141' name='Q{}nameend' slot='2'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='2'/>
    </param>
    <param line='142' name='Q{}count' slot='3'>
     <int role='select' val='0'/>
     <supplied role='conversion' slot='3'/>
    </param>
    <choose line='146'>
     <varRef name='Q{}next-row' slot='0'/>
     <let line='148' var='Q{}in-same-column' as='document-node()' slot='4' eval='16'>
      <doc line='149' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' validation='preserve'>
       <callT name='Q{}has-vmerge-in-same-column' bSlot='0'>
        <withParam name='Q{}next-row-vmerges' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vmerge)*'>
         <conditionalSort line='150'>
          <fn name='exists'>
           <tail start='2'>
            <treat as='node()' diag='1|0|XPTY0019|/'>
             <varRef name='Q{}next-row' slot='0'/>
            </treat>
           </tail>
          </fn>
          <docOrder intra='0'>
           <slash simple='2'>
            <slash simple='2'>
             <slash simple='2'>
              <treat as='node()' diag='1|0|XPTY0019|/'>
               <varRef name='Q{}next-row' slot='0'/>
              </treat>
              <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)'/>
             </slash>
             <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)'/>
            </slash>
            <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vmerge)'/>
           </slash>
          </docOrder>
         </conditionalSort>
        </withParam>
        <withParam name='Q{}namest' flags='c'>
         <varRef line='151' name='Q{}namest' slot='1'/>
        </withParam>
        <withParam name='Q{}nameend' flags='c'>
         <varRef line='152' name='Q{}nameend' slot='2'/>
        </withParam>
       </callT>
      </doc>
      <sequence line='156'>
       <message>
        <sequence role='select'>
         <valueOf flags='S'>
          <str val='$in-same-column='/>
         </valueOf>
         <valueOf>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <varRef name='Q{}in-same-column' slot='4'/>
           </data>
          </convert>
         </valueOf>
        </sequence>
        <str role='terminate' val='no'/>
        <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
       </message>
       <choose line='162'>
        <fn name='exists'>
         <filter flags='b'>
          <slash>
           <treat as='node()' diag='1|0|XPTY0019|/'>
            <varRef name='Q{}next-row' slot='0'/>
           </treat>
           <first>
            <axis name='following-sibling' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)'/>
           </first>
          </slash>
          <fn name='exists'>
           <axis name='descendant' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vmerge)'/>
          </fn>
         </filter>
        </fn>
        <callT line='163' name='Q{}morerows' bSlot='1' flags='t'>
         <withParam name='Q{}next-row' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)*'>
          <docOrder line='164' intra='0'>
           <filter flags='b'>
            <slash>
             <treat as='node()' diag='1|0|XPTY0019|/'>
              <varRef name='Q{}next-row' slot='0'/>
             </treat>
             <first>
              <axis name='following-sibling' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)'/>
             </first>
            </slash>
            <fn name='exists'>
             <axis name='descendant' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vmerge)'/>
            </fn>
           </filter>
          </docOrder>
         </withParam>
         <withParam name='Q{}count' flags='c' as='xs:anyAtomicType'>
          <arith10 line='165' op='+' calc='a+a'>
           <let var='Q{http://saxon.sf.net/}nn1144643219' as='xs:anyAtomicType?' slot='5' eval='7'>
            <atomSing card='?' diag='1|0||+'>
             <first>
              <varRef name='Q{}count' slot='3'/>
             </first>
            </atomSing>
            <choose>
             <or op='or'>
              <or op='or'>
               <or op='or'>
                <or op='or'>
                 <or op='or'>
                  <instance of='xs:double?'>
                   <varRef name='Q{http://saxon.sf.net/}nn1144643219' slot='5'/>
                  </instance>
                  <instance of='xs:decimal?'>
                   <varRef name='Q{http://saxon.sf.net/}nn1144643219' slot='5'/>
                  </instance>
                 </or>
                 <instance of='xs:float?'>
                  <varRef name='Q{http://saxon.sf.net/}nn1144643219' slot='5'/>
                 </instance>
                </or>
                <instance of='xs:string?'>
                 <varRef name='Q{http://saxon.sf.net/}nn1144643219' slot='5'/>
                </instance>
               </or>
               <instance of='xs:untypedAtomic?'>
                <varRef name='Q{http://saxon.sf.net/}nn1144643219' slot='5'/>
               </instance>
              </or>
              <instance of='xs:boolean?'>
               <varRef name='Q{http://saxon.sf.net/}nn1144643219' slot='5'/>
              </instance>
             </or>
             <fn name='number'>
              <varRef name='Q{http://saxon.sf.net/}nn1144643219' slot='5'/>
             </fn>
             <true/>
             <varRef name='Q{http://saxon.sf.net/}nn1144643219' slot='5'/>
            </choose>
           </let>
           <dbl val='1'/>
          </arith10>
         </withParam>
         <withParam name='Q{}namest' flags='c'>
          <varRef line='166' name='Q{}namest' slot='1'/>
         </withParam>
         <withParam name='Q{}nameend' flags='c'>
          <varRef line='167' name='Q{}nameend' slot='2'/>
         </withParam>
        </callT>
        <true/>
        <valueOf line='172'>
         <convert from='xs:anyAtomicType' to='xs:string'>
          <arith10 op='+' calc='a+a'>
           <let var='Q{http://saxon.sf.net/}nn1500891769' as='xs:anyAtomicType?' slot='6' eval='7'>
            <atomSing card='?' diag='1|0||+'>
             <first>
              <varRef name='Q{}count' slot='3'/>
             </first>
            </atomSing>
            <choose>
             <or op='or'>
              <or op='or'>
               <or op='or'>
                <or op='or'>
                 <or op='or'>
                  <instance of='xs:double?'>
                   <varRef name='Q{http://saxon.sf.net/}nn1500891769' slot='6'/>
                  </instance>
                  <instance of='xs:decimal?'>
                   <varRef name='Q{http://saxon.sf.net/}nn1500891769' slot='6'/>
                  </instance>
                 </or>
                 <instance of='xs:float?'>
                  <varRef name='Q{http://saxon.sf.net/}nn1500891769' slot='6'/>
                 </instance>
                </or>
                <instance of='xs:string?'>
                 <varRef name='Q{http://saxon.sf.net/}nn1500891769' slot='6'/>
                </instance>
               </or>
               <instance of='xs:untypedAtomic?'>
                <varRef name='Q{http://saxon.sf.net/}nn1500891769' slot='6'/>
               </instance>
              </or>
              <instance of='xs:boolean?'>
               <varRef name='Q{http://saxon.sf.net/}nn1500891769' slot='6'/>
              </instance>
             </or>
             <fn name='number'>
              <varRef name='Q{http://saxon.sf.net/}nn1500891769' slot='6'/>
             </fn>
             <true/>
             <varRef name='Q{http://saxon.sf.net/}nn1500891769' slot='6'/>
            </choose>
           </let>
           <dbl val='1'/>
          </arith10>
         </convert>
        </valueOf>
       </choose>
      </sequence>
     </let>
     <true/>
     <valueOf line='183'>
      <convert from='xs:anyAtomicType' to='xs:string'>
       <first>
        <data>
         <varRef name='Q{}count' slot='3'/>
        </data>
       </first>
      </convert>
     </valueOf>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='27' binds=''>
  <globalVariable name='Q{}symbol-font' type='xs:string' line='28' module='file:/C:/Users/User/Documents/word2styles/variables.xsl' visibility='PRIVATE'>
   <str val='Symbol'/>
  </globalVariable>
 </co>
 <co id='25' binds='28'>
  <globalVariable name='Q{http://saxon.sf.net/generated-variable}gg1746093656' type='xs:string' line='28' module='file:/C:/Users/User/Documents/word2styles/css.xsl' visibility='PRIVATE'>
   <fn baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='28' name='string-join'>
    <convert from='xs:anyAtomicType' to='xs:string'>
     <data>
      <mergeAdj>
       <gVarRef name='Q{}css-sys-id' bSlot='0'/>
      </mergeAdj>
     </data>
    </convert>
    <str val=' '/>
   </fn>
  </globalVariable>
 </co>
 <co id='21' binds='7'>
  <globalVariable name='Q{http://saxon.sf.net/generated-variable}gg2095347181' type='xs:string' line='48' module='file:/C:/Users/User/Documents/word2styles/css.xsl' visibility='PRIVATE'>
   <fn baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='48' name='string-join'>
    <convert from='xs:anyAtomicType' to='xs:string'>
     <data>
      <mergeAdj>
       <gVarRef name='Q{}debugging-css-sys-id' bSlot='0'/>
      </mergeAdj>
     </data>
    </convert>
    <str val=' '/>
   </fn>
  </globalVariable>
 </co>
 <co id='29' binds=''>
  <globalVariable name='Q{}styles-doc' type='document-node()' line='24' module='file:/C:/Users/User/Documents/word2styles/variables.xsl' visibility='PRIVATE'>
   <fn baseUri='file:/C:/Users/User/Documents/word2styles/variables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='24' name='doc'>
    <convert from='xs:anyURI' to='xs:string'>
     <fn name='resolve-uri'>
      <str val='styles.xml'/>
      <check card='1' diag='0|1||fn:resolve-uri'>
       <convert from='xs:anyURI' to='xs:string'>
        <fn name='base-uri'>
         <root/>
        </fn>
       </convert>
      </check>
     </fn>
    </convert>
   </fn>
  </globalVariable>
 </co>
 <co id='30' binds='30 3'>
  <template name='Q{}utils.trailing-spaces' flags='os' line='117' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='2'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='118'>
    <param name='Q{}string' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='119' name='Q{}result' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <choose line='126'>
     <vc op='eq' onEmpty='0' comp='CCC'>
      <fn line='122' name='substring'>
       <treat as='xs:string' diag='0|0||fn:substring'>
        <check card='?' diag='0|0||fn:substring'>
         <cvUntyped to='xs:string'>
          <data>
           <varRef name='Q{}string' slot='0'/>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <fn name='string-length'>
        <treat as='xs:string' diag='0|0||fn:string-length'>
         <check card='?' diag='0|0||fn:string-length'>
          <cvUntyped to='xs:string'>
           <data>
            <varRef name='Q{}string' slot='0'/>
           </data>
          </cvUntyped>
         </check>
        </treat>
       </fn>
       <int val='1'/>
      </fn>
      <str val=' '/>
     </vc>
     <callT line='127' name='Q{}utils.trailing-spaces' bSlot='0' flags='t'>
      <withParam name='Q{}string' flags='c' as='xs:string'>
       <fn line='129' name='substring'>
        <treat as='xs:string' diag='0|0||fn:substring'>
         <check card='?' diag='0|0||fn:substring'>
          <cvUntyped to='xs:string'>
           <data>
            <varRef name='Q{}string' slot='0'/>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <int val='1'/>
        <arith op='-' calc='i-i'>
         <fn name='string-length'>
          <treat as='xs:string' diag='0|0||fn:string-length'>
           <check card='?' diag='0|0||fn:string-length'>
            <cvUntyped to='xs:string'>
             <data>
              <varRef name='Q{}string' slot='0'/>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </fn>
         <int val='1'/>
        </arith>
       </fn>
      </withParam>
      <withParam name='Q{}result' flags='c' as='xs:string'>
       <fn line='130' name='concat'>
        <atomSing card='?' diag='0|0||fn:concat'>
         <varRef name='Q{}result' slot='1'/>
        </atomSing>
        <str val=' '/>
       </fn>
      </withParam>
     </callT>
     <true/>
     <sequence line='134'>
      <choose>
       <gc op='!=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
        <data>
         <varRef name='Q{}result' slot='1'/>
        </data>
        <str val=''/>
       </gc>
       <callT line='135' name='Q{}debug' bSlot='1'>
        <withParam name='Q{}msg' flags='c' as='document-node()'>
         <doc line='136' base='file:/C:/Users/User/Documents/word2styles/utils.xsl' flags='t' validation='preserve'>
          <sequence>
           <valueOf flags='l'>
            <str val='stripped '/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:integer' to='xs:string'>
             <fn name='string-length'>
              <treat as='xs:string' diag='0|0||fn:string-length'>
               <check card='?' diag='0|0||fn:string-length'>
                <cvUntyped to='xs:string'>
                 <data>
                  <varRef name='Q{}result' slot='1'/>
                 </data>
                </cvUntyped>
               </check>
              </treat>
             </fn>
            </convert>
           </valueOf>
           <valueOf flags='l'>
            <str val=' trailing spaces: &#39;'/>
           </valueOf>
           <valueOf flags='l'>
            <fn name='string-join'>
             <convert from='xs:anyAtomicType' to='xs:string'>
              <data>
               <dot flags='a'/>
              </data>
             </convert>
             <str val=' '/>
            </fn>
           </valueOf>
           <valueOf flags='Sl'>
            <str val='&#39;'/>
           </valueOf>
          </sequence>
         </doc>
        </withParam>
       </callT>
      </choose>
      <valueOf line='139'>
       <fn name='string-join'>
        <convert from='xs:anyAtomicType' to='xs:string'>
         <data>
          <mergeAdj>
           <varRef name='Q{}result' slot='1'/>
          </mergeAdj>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </sequence>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='24' binds='24 24 24 24'>
  <mode name='Q{}css' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='0.5' seq='27' rank='0' minImp='0' slots='0' flags='s' line='242' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}caps)'/>
      <or baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='242' op='or'>
       <fn name='not'>
        <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
       </fn>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <data>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </data>
        </cast>
        <str val='on'/>
       </vc>
      </or>
     </p.withPredicate>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='text-transform:capitalize;&#xA;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='34' rank='0' minImp='0' slots='0' flags='s' line='270' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}color)'/>
      <vc baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='270' op='ne' onEmpty='0' comp='CCC'>
       <cast as='xs:string' emptiable='1'>
        <data>
         <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
        </data>
       </cast>
       <str val='auto'/>
      </vc>
     </p.withPredicate>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='271'>
     <fn name='concat'>
      <str val='color:#'/>
      <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val' chk='0'/>
      <str val=';&#xA;'/>
     </fn>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='14' rank='0' minImp='0' slots='0' flags='s' line='158' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)'/>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}wordDocument)'/>
     </p.withUpper>
    </p.withUpper>
    <sequence role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='160'>
     <valueOf>
      <fn line='159' name='concat'>
       <str val='.'/>
       <fn name='substring'>
        <cvUntyped to='xs:string'>
         <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
        </cvUntyped>
        <int val='1'/>
        <int val='4'/>
       </fn>
       <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styleId' chk='0'/>
      </fn>
     </valueOf>
     <valueOf>
      <str val='&#xA;{&#xA;'/>
     </valueOf>
     <applyT line='162' mode='Q{}css' flags='i' bSlot='0'>
      <axis role='select' name='child' nodeTest='node()'/>
     </applyT>
     <valueOf>
      <str val='}&#xA;&#xA;'/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='24' rank='0' minImp='0' slots='0' flags='s' line='230' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sz)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='231'>
     <fn name='concat'>
      <str val='font-size:'/>
      <arith op='div' calc='d/d'>
       <cvUntyped to='xs:double'>
        <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val' chk='0'/>
       </cvUntyped>
       <dbl val='2'/>
      </arith>
      <str val='pt;&#xA;'/>
     </fn>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='17' rank='0' minImp='0' slots='0' flags='s' line='198' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}jc)'/>
      <vc baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='198' op='eq' onEmpty='0' comp='CCC'>
       <cast as='xs:string' emptiable='1'>
        <data>
         <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
        </data>
       </cast>
       <str val='both'/>
      </vc>
     </p.withPredicate>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
     </p.withUpper>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='text-align:justify;&#xA;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='16' rank='0' minImp='0' slots='0' flags='s' line='192' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}jc)'/>
      <or baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='192' op='or'>
       <or op='or'>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <data>
           <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
          </data>
         </cast>
         <str val='left'/>
        </vc>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <data>
           <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
          </data>
         </cast>
         <str val='center'/>
        </vc>
       </or>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <data>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </data>
        </cast>
        <str val='right'/>
       </vc>
      </or>
     </p.withPredicate>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
     </p.withUpper>
    </p.withUpper>
    <sequence role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='194'>
     <valueOf flags='S'>
      <str val='text-align:'/>
     </valueOf>
     <valueOf>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val' chk='0'/>
      </convert>
     </valueOf>
     <valueOf>
      <str val=';&#xA;'/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='29' rank='0' minImp='0' slots='0' flags='s' line='250' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}strike)'/>
      <or baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='250' op='or'>
       <fn name='not'>
        <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
       </fn>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <data>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </data>
        </cast>
        <str val='on'/>
       </vc>
      </or>
     </p.withPredicate>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='text-decoration:line-through;&#xA;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='26' rank='0' minImp='0' slots='0' flags='s' line='238' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}i)'/>
      <or baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='238' op='or'>
       <fn name='not'>
        <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
       </fn>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <data>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </data>
        </cast>
        <str val='on'/>
       </vc>
      </or>
     </p.withPredicate>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='font-style:italic;&#xA;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='33' rank='0' minImp='0' slots='0' flags='s' line='266' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vertAlign)'/>
      <vc baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='266' op='eq' onEmpty='0' comp='CCC'>
       <cast as='xs:string' emptiable='1'>
        <data>
         <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
        </data>
       </cast>
       <str val='baseline'/>
      </vc>
     </p.withPredicate>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='vertical-align:baseline;&#xA;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='32' rank='0' minImp='0' slots='0' flags='s' line='262' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vertAlign)'/>
      <vc baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='262' op='eq' onEmpty='0' comp='CCC'>
       <cast as='xs:string' emptiable='1'>
        <data>
         <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
        </data>
       </cast>
       <str val='subscript'/>
      </vc>
     </p.withPredicate>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='vertical-align:sub;&#xA;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='31' rank='0' minImp='0' slots='0' flags='s' line='258' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vertAlign)'/>
      <vc baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='258' op='eq' onEmpty='0' comp='CCC'>
       <cast as='xs:string' emptiable='1'>
        <data>
         <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
        </data>
       </cast>
       <str val='superscript'/>
      </vc>
     </p.withPredicate>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='vertical-align:sup;&#xA;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='15' rank='0' minImp='0' slots='2' flags='s' line='178' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}basedOn)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
    </p.withUpper>
    <let role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='179' var='Q{}base-style' as='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)?' slot='0' eval='8'>
     <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
     <choose line='182'>
      <or op='or'>
       <and op='and'>
        <gc op='=' card='N:1' comp='CCC'>
         <data>
          <slash simple='2'>
           <axis name='parent' nodeTest='(document-node()|element())'/>
           <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type)'/>
          </slash>
         </data>
         <str val='paragraph'/>
        </gc>
        <vc op='ne' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <data>
           <varRef name='Q{}base-style' slot='0'/>
          </data>
         </cast>
         <str val='Normal'/>
        </vc>
       </and>
       <and op='and'>
        <gc op='=' card='N:1' comp='CCC'>
         <data>
          <slash simple='2'>
           <axis name='parent' nodeTest='(document-node()|element())'/>
           <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type)'/>
          </slash>
         </data>
         <str val='character'/>
        </gc>
        <vc op='ne' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <data>
           <varRef name='Q{}base-style' slot='0'/>
          </data>
         </cast>
         <str val='DefaultParagraphFont'/>
        </vc>
       </and>
      </or>
      <let line='187' var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:string?' slot='1' eval='13'>
       <cast as='xs:string' emptiable='1'>
        <data>
         <varRef name='Q{}base-style' slot='0'/>
        </data>
       </cast>
       <sequence line='184'>
        <valueOf>
         <str val='/*based on: '/>
        </valueOf>
        <valueOf>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <varRef name='Q{}base-style' slot='0'/>
          </data>
         </convert>
        </valueOf>
        <valueOf>
         <str val='*/&#xA;'/>
        </valueOf>
        <applyT line='187' mode='Q{}css' flags='t' bSlot='1'>
         <slash role='select' simple='2'>
          <filter flags='b'>
           <slash simple='2'>
            <docOrder intra='1'>
             <slash simple='2'>
              <axis name='parent' nodeTest='(document-node()|element())'/>
              <axis name='parent' nodeTest='(document-node()|element())'/>
             </slash>
            </docOrder>
            <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styleId' chk='0'/>
            </cast>
            <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='1'/>
           </vc>
          </filter>
          <axis name='descendant' nodeTest='element()'/>
         </slash>
        </applyT>
       </sequence>
      </let>
     </choose>
    </let>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='28' rank='0' minImp='0' slots='0' flags='s' line='246' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}smallCaps)'/>
      <or baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='246' op='or'>
       <fn name='not'>
        <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
       </fn>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <data>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </data>
        </cast>
        <str val='on'/>
       </vc>
      </or>
     </p.withPredicate>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='font-variant:small-caps;&#xA;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='23' rank='0' minImp='0' slots='0' flags='s' line='226' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.microsoft.com/office/word/2003/auxHint}font)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='227'>
     <fn name='concat'>
      <str val='font-family:'/>
      <attVal name='Q{http://schemas.microsoft.com/office/word/2003/auxHint}val' chk='0'/>
      <str val=';&#xA;'/>
     </fn>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='21' rank='0' minImp='0' slots='0' flags='s' line='214' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ind)'/>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
     </p.withUpper>
    </p.withUpper>
    <applyT role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='216' mode='Q{}css' flags='t' bSlot='2'>
     <axis role='select' name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}left)'/>
    </applyT>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='35' rank='0' minImp='0' slots='0' flags='s' line='275' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}highlight)'/>
      <vc baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='275' op='ne' onEmpty='0' comp='CCC'>
       <cast as='xs:string' emptiable='1'>
        <data>
         <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
        </data>
       </cast>
       <str val='none'/>
      </vc>
     </p.withPredicate>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='276'>
     <fn name='concat'>
      <str val='background-color:'/>
      <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val' chk='0'/>
      <str val=';&#xA;'/>
     </fn>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='25' rank='0' minImp='0' slots='0' flags='s' line='234' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}b)'/>
      <or baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='234' op='or'>
       <fn name='not'>
        <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
       </fn>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <data>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </data>
        </cast>
        <str val='on'/>
       </vc>
      </or>
     </p.withPredicate>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='font-weight:bold;&#xA;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='18' rank='0' minImp='0' slots='0' flags='s' line='202' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}spacing)'/>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
     </p.withUpper>
    </p.withUpper>
    <applyT role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='203' mode='Q{}css' flags='t' bSlot='3'>
     <axis role='select' name='attribute' nodeTest='(attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}before) | attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}after))'/>
    </applyT>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='30' rank='0' minImp='0' slots='0' flags='s' line='254' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}u)'/>
      <or baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='254' op='or'>
       <fn name='not'>
        <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
       </fn>
       <vc op='ne' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <data>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </data>
        </cast>
        <str val='none'/>
       </vc>
      </or>
     </p.withPredicate>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='text-decoration:underline;&#xA;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='20' rank='0' minImp='0' slots='0' flags='s' line='210' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}after)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}spacing)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='211'>
     <fn name='concat'>
      <str val='padding-bottom:'/>
      <arith op='div' calc='d/d'>
       <cvUntyped to='xs:double'>
        <atomSing card='?' diag='1|0||div'>
         <dot type='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}after)'/>
        </atomSing>
       </cvUntyped>
       <dbl val='20'/>
      </arith>
      <str val='pt;&#xA;'/>
     </fn>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='22' rank='0' minImp='0' slots='0' flags='s' line='219' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}left)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ind)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='220'>
     <fn name='concat'>
      <str val='padding-left:'/>
      <arith op='div' calc='d/d'>
       <cvUntyped to='xs:double'>
        <atomSing card='?' diag='1|0||div'>
         <dot type='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}left)'/>
        </atomSing>
       </cvUntyped>
       <dbl val='20'/>
      </arith>
      <str val='pt;&#xA;'/>
     </fn>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='19' rank='0' minImp='0' slots='0' flags='s' line='206' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}before)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}spacing)'/>
    </p.withUpper>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='207'>
     <fn name='concat'>
      <str val='padding-top:'/>
      <arith op='div' calc='d/d'>
       <cvUntyped to='xs:double'>
        <atomSing card='?' diag='1|0||div'>
         <dot type='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}before)'/>
        </atomSing>
       </cvUntyped>
       <dbl val='20'/>
      </arith>
      <str val='pt;&#xA;'/>
     </fn>
    </valueOf>
   </templateRule>
  </mode>
 </co>
 <co id='31' binds=''>
  <globalParam name='Q{}generate-stylename-variables' type='item()*' line='21' module='file:/C:/Users/User/Documents/word2styles/params.xsl' visibility='PUBLIC'>
   <false/>
  </globalParam>
 </co>
 <co id='32' binds=''>
  <globalVariable name='Q{}parliamentary-symbols-font' type='xs:string' line='29' module='file:/C:/Users/User/Documents/word2styles/variables.xsl' visibility='PRIVATE'>
   <str val='ParliamentarySymbols'/>
  </globalVariable>
 </co>
 <co id='33' binds='33 3'>
  <template name='Q{}utils.leading-spaces' flags='os' line='94' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='2'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='95'>
    <param name='Q{}string' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='96' name='Q{}result' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <choose line='99'>
     <fn name='starts-with'>
      <treat as='xs:string' diag='0|0||fn:starts-with'>
       <check card='?' diag='0|0||fn:starts-with'>
        <cvUntyped to='xs:string'>
         <data>
          <varRef name='Q{}string' slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <str val=' '/>
     </fn>
     <callT line='100' name='Q{}utils.leading-spaces' bSlot='0' flags='t'>
      <withParam name='Q{}string' flags='c' as='xs:string'>
       <fn line='101' name='substring'>
        <treat as='xs:string' diag='0|0||fn:substring'>
         <check card='?' diag='0|0||fn:substring'>
          <cvUntyped to='xs:string'>
           <data>
            <varRef name='Q{}string' slot='0'/>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <int val='2'/>
       </fn>
      </withParam>
      <withParam name='Q{}result' flags='c' as='xs:string'>
       <fn line='102' name='concat'>
        <atomSing card='?' diag='0|0||fn:concat'>
         <varRef name='Q{}result' slot='1'/>
        </atomSing>
        <str val=' '/>
       </fn>
      </withParam>
     </callT>
     <true/>
     <sequence line='106'>
      <choose>
       <gc op='!=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
        <data>
         <varRef name='Q{}result' slot='1'/>
        </data>
        <str val=''/>
       </gc>
       <callT line='107' name='Q{}debug' bSlot='1'>
        <withParam name='Q{}msg' flags='c' as='document-node()'>
         <doc line='108' base='file:/C:/Users/User/Documents/word2styles/utils.xsl' flags='t' validation='preserve'>
          <sequence>
           <valueOf flags='l'>
            <str val='stripped '/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:integer' to='xs:string'>
             <fn name='string-length'>
              <treat as='xs:string' diag='0|0||fn:string-length'>
               <check card='?' diag='0|0||fn:string-length'>
                <cvUntyped to='xs:string'>
                 <data>
                  <varRef name='Q{}result' slot='1'/>
                 </data>
                </cvUntyped>
               </check>
              </treat>
             </fn>
            </convert>
           </valueOf>
           <valueOf flags='l'>
            <str val=' leading spaces: &#39;'/>
           </valueOf>
           <valueOf flags='l'>
            <fn name='string-join'>
             <convert from='xs:anyAtomicType' to='xs:string'>
              <data>
               <dot flags='a'/>
              </data>
             </convert>
             <str val=' '/>
            </fn>
           </valueOf>
           <valueOf flags='Sl'>
            <str val='&#39;'/>
           </valueOf>
          </sequence>
         </doc>
        </withParam>
       </callT>
      </choose>
      <valueOf line='111'>
       <fn name='string-join'>
        <convert from='xs:anyAtomicType' to='xs:string'>
         <data>
          <mergeAdj>
           <varRef name='Q{}result' slot='1'/>
          </mergeAdj>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </sequence>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='34' binds='5 5'>
  <template name='Q{}generate-stylename-variables' flags='os' line='91' module='file:/C:/Users/User/Documents/word2styles/word-utils.xsl' slots='0'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/word-utils.xsl' ns='xsl=~ asdp=http://ns.andrewsales.com/xslt/functions xs=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='93'>
    <message>
     <sequence role='select'>
      <comment>
       <str val='BEGIN PARAGRAPH STYLES'/>
      </comment>
      <valueOf>
       <str val='&#xA;'/>
      </valueOf>
     </sequence>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
    <applyT line='97' bSlot='0'>
     <sort role='select'>
      <filter role='select' flags='b'>
       <slash simple='2'>
        <slash simple='2'>
         <slash simple='1'>
          <treat as='node()' diag='14|3|XPTY0020|'>
           <dot flags='a'/>
          </treat>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}wordDocument)'/>
         </slash>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)'/>
        </slash>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
        </cast>
        <str val='paragraph'/>
       </vc>
      </filter>
      <sortKey line='98' comp='CCC'>
       <atomSing role='select' card='?' diag='4|0|XTTE1020|xsl:sort/select'>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)'/>
         <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
        </slash>
       </atomSing>
       <str role='order' val='ascending'/>
       <str role='lang' val=''/>
       <str role='caseOrder' val='#default'/>
       <str role='stable' val='yes'/>
       <str role='collation' val='http://www.w3.org/2005/xpath-functions/collation/codepoint'/>
      </sortKey>
     </sort>
    </applyT>
    <message line='101'>
     <sequence role='select'>
      <valueOf>
       <str val='&#xA;'/>
      </valueOf>
      <comment>
       <str val='END PARAGRAPH STYLES'/>
      </comment>
      <valueOf>
       <str val='&#xA;&#xA;'/>
      </valueOf>
      <comment>
       <str val='BEGIN CHARACTER STYLES'/>
      </comment>
      <valueOf>
       <str val='&#xA;'/>
      </valueOf>
     </sequence>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
    <applyT line='108' bSlot='1'>
     <sort role='select'>
      <filter role='select' flags='b'>
       <slash simple='2'>
        <slash simple='2'>
         <slash simple='1'>
          <treat as='node()' diag='14|3|XPTY0020|'>
           <dot flags='a'/>
          </treat>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}wordDocument)'/>
         </slash>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)'/>
        </slash>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
        </cast>
        <str val='character'/>
       </vc>
      </filter>
      <sortKey line='109' comp='CCC'>
       <atomSing role='select' card='?' diag='4|0|XTTE1020|xsl:sort/select'>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)'/>
         <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
        </slash>
       </atomSing>
       <str role='order' val='ascending'/>
       <str role='lang' val=''/>
       <str role='caseOrder' val='#default'/>
       <str role='stable' val='yes'/>
       <str role='collation' val='http://www.w3.org/2005/xpath-functions/collation/codepoint'/>
      </sortKey>
     </sort>
    </applyT>
   </sequence>
  </template>
 </co>
 <co id='35' binds=''>
  <globalParam name='Q{}preserve-section-wrappers' type='item()*' line='25' module='file:/C:/Users/User/Documents/word2styles/params.xsl' visibility='PUBLIC'>
   <false/>
  </globalParam>
 </co>
 <co id='20' binds='29 24'>
  <mode name='Q{}debugging-css' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='0.5' seq='13' rank='0' minImp='0' slots='0' flags='s' line='142' module='file:/C:/Users/User/Documents/word2styles/css.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)'/>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}wordDocument)'/>
     </p.withUpper>
    </p.withUpper>
    <sequence role='action' baseUri='file:/C:/Users/User/Documents/word2styles/css.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='144'>
     <choose>
      <vc op='eq' onEmpty='0' comp='CCC'>
       <cast as='xs:string' emptiable='1'>
        <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
       </cast>
       <str val='paragraph'/>
      </vc>
      <valueOf flags='S'>
       <str val='p'/>
      </valueOf>
      <vc line='145' op='eq' onEmpty='0' comp='CCC'>
       <cast as='xs:string' emptiable='1'>
        <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
       </cast>
       <str val='character'/>
      </vc>
      <valueOf flags='S'>
       <str val='span'/>
      </valueOf>
     </choose>
     <valueOf line='151'>
      <fn name='concat'>
       <str val='[style=&#39;'/>
       <atomSing card='?' diag='0|1||fn:concat'>
        <slash line='149' simple='2'>
         <docOrder intra='1'>
          <slash simple='2'>
           <fn name='key'>
            <str val='word-styles'/>
            <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styleId' chk='0'/>
            <gVarRef name='Q{}styles-doc' bSlot='0'/>
           </fn>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)'/>
          </slash>
         </docOrder>
         <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
        </slash>
       </atomSing>
       <str val='&#39;]&#xA;'/>
      </fn>
     </valueOf>
     <valueOf>
      <str val='{&#xA;'/>
     </valueOf>
     <applyT line='153' mode='Q{}css' flags='i' bSlot='1'>
      <axis role='select' name='child' nodeTest='node()'/>
     </applyT>
     <valueOf>
      <str val='}&#xA;&#xA;'/>
     </valueOf>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='36' binds=''>
  <template name='Q{}report-children' flags='os' line='187' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='0'>
   <forEach role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='188'>
    <slash simple='1'>
     <treat as='node()' diag='14|3|XPTY0020|'>
      <dot flags='a'/>
     </treat>
     <axis name='child' nodeTest='element()'/>
    </slash>
    <message line='189'>
     <valueOf role='select'>
      <fn name='name'>
       <dot type='element()'/>
      </fn>
     </valueOf>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
   </forEach>
  </template>
 </co>
 <co id='37' binds=''>
  <globalParam name='Q{}xpath-location-pis' type='item()*' line='31' module='file:/C:/Users/User/Documents/word2styles/params.xsl' visibility='PUBLIC'>
   <false/>
  </globalParam>
 </co>
 <co id='28' binds=''>
  <globalParam name='Q{}css-sys-id' type='item()*' line='23' module='file:/C:/Users/User/Documents/word2styles/params.xsl' visibility='PUBLIC'>
   <str val='wordml.css'/>
  </globalParam>
 </co>
 <co id='38' binds=''>
  <globalParam name='Q{}debug' type='item()*' line='20' module='file:/C:/Users/User/Documents/word2styles/params.xsl' visibility='PUBLIC'>
   <false/>
  </globalParam>
 </co>
 <co id='3' binds='38'>
  <template name='Q{}debug' flags='os' line='195' module='file:/C:/Users/User/Documents/word2styles/utils.xsl' slots='1'>
   <sequence role='body' baseUri='file:/C:/Users/User/Documents/word2styles/utils.xsl' ns='xsl=~ str=http://exslt.org/string' line='196'>
    <param name='Q{}msg' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='197'>
     <gVarRef name='Q{}debug' bSlot='0'/>
     <message line='198'>
      <valueOf role='select' flags='e'>
       <fn name='concat'>
        <str val='[debug]:'/>
        <fn name='string-join'>
         <convert from='xs:anyAtomicType' to='xs:string'>
          <data>
           <mergeAdj>
            <varRef name='Q{}msg' slot='0'/>
           </mergeAdj>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </fn>
      </valueOf>
      <str role='terminate' val='no'/>
      <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
     </message>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='39' binds='9 26'>
  <mode name='Q{}oasis' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='0.0' seq='53' rank='0' minImp='0' slots='1' flags='s' line='101' module='file:/C:/Users/User/Documents/word2styles/tables.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vmerge)'/>
    <choose role='action' baseUri='file:/C:/Users/User/Documents/word2styles/tables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='102'>
     <vc op='eq' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
      <cast as='xs:string' emptiable='1'>
       <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val' chk='0'/>
      </cast>
      <str val='restart'/>
     </vc>
     <att line='104' name='morerows'>
      <fn line='106' name='string-join'>
       <convert from='xs:anyAtomicType' to='xs:string'>
        <data>
         <mergeAdj>
          <let var='Q{}namest' as='document-node()' slot='0' eval='16'>
           <doc line='107' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' validation='preserve'>
            <callT name='Q{}colnum' bSlot='0'/>
           </doc>
           <callT line='110' name='Q{}morerows' bSlot='1'>
            <withParam name='Q{}next-row' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)*'>
             <docOrder line='111' intra='1'>
              <filter flags='b'>
               <slash>
                <docOrder intra='1'>
                 <slash simple='2'>
                  <docOrder intra='1'>
                   <slash simple='2'>
                    <axis name='parent' nodeTest='(document-node()|element())'/>
                    <axis name='parent' nodeTest='(document-node()|element())'/>
                   </slash>
                  </docOrder>
                  <axis name='parent' nodeTest='(document-node()|element())'/>
                 </slash>
                </docOrder>
                <first>
                 <axis name='following-sibling' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)'/>
                </first>
               </slash>
               <fn name='exists'>
                <axis name='descendant' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vmerge)'/>
               </fn>
              </filter>
             </docOrder>
            </withParam>
            <withParam name='Q{}namest' flags='c' as='document-node()'>
             <doc line='113' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' flags='t' validation='preserve'>
              <valueOf flags='l'>
               <convert from='xs:untypedAtomic' to='xs:string'>
                <data>
                 <varRef name='Q{}namest' slot='0'/>
                </data>
               </convert>
              </valueOf>
             </doc>
            </withParam>
            <withParam name='Q{}nameend' flags='c' as='document-node()'>
             <doc line='117' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' flags='t' validation='preserve'>
              <choose>
               <fn name='exists'>
                <slash simple='2'>
                 <slash simple='2'>
                  <axis name='parent' nodeTest='(document-node()|element())'/>
                  <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridSpan)'/>
                 </slash>
                 <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
                </slash>
               </fn>
               <valueOf line='118' flags='l'>
                <convert from='xs:double' to='xs:string'>
                 <fn name='number'>
                  <data>
                   <first>
                    <slash simple='2'>
                     <slash simple='2'>
                      <axis name='parent' nodeTest='(document-node()|element())'/>
                      <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridSpan)'/>
                     </slash>
                     <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
                    </slash>
                   </first>
                  </data>
                 </fn>
                </convert>
               </valueOf>
               <true/>
               <valueOf line='121' flags='l'>
                <convert from='xs:untypedAtomic' to='xs:string'>
                 <data>
                  <varRef name='Q{}namest' slot='0'/>
                 </data>
                </convert>
               </valueOf>
              </choose>
             </doc>
            </withParam>
           </callT>
          </let>
         </mergeAdj>
        </data>
       </convert>
       <str val=''/>
      </fn>
     </att>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id='5' binds='4 31 34 5 5 5 18 1 5 18 5 5 4 5 5 3 35 5 5 5 5 5 5 4 5 5 5 5 12 4 9 2 5 4 12 4 5 5'>
  <mode onNo='TC' flags='dW' patternSlots='0'>
   <templateRule prec='0' prio='-0.5' seq='55' rank='0' minImp='0' slots='0' flags='s' line='41' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.nodeTest role='match' test='document-node()'/>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='42' name='Document' nsuri=''>
     <sequence line='43'>
      <callT name='Q{}xpath-loc' bSlot='0'>
       <withParam name='Q{}node' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)?'>
        <first line='44'>
         <slash simple='2'>
          <slash simple='2'>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)'/>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)'/>
          </slash>
          <axis name='descendant' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
         </slash>
        </first>
       </withParam>
      </callT>
      <choose line='47'>
       <gVarRef name='Q{}generate-stylename-variables' bSlot='1'/>
       <callT line='48' name='Q{}generate-stylename-variables' bSlot='2'/>
      </choose>
      <applyT line='59' bSlot='3'>
       <slash role='select'>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)'/>
        <first>
         <axis name='child' nodeTest='element(Q{urn:schemas-microsoft-com:office:office}SmartTagType)'/>
        </first>
       </slash>
      </applyT>
      <applyT line='60' bSlot='4'>
       <slash role='select' simple='2'>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)'/>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)'/>
       </slash>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='9' rank='1' minImp='0' slots='0' flags='s' line='44' module='file:/C:/Users/User/Documents/word2styles/chars.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}noBreakHyphen)'/>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/chars.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='‑'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='58' rank='2' minImp='0' slots='0' flags='s' line='97' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sectPr)'/>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
     </p.withUpper>
    </p.withUpper>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='98' name='props' nsuri=''>
     <applyT bSlot='5'>
      <axis role='select' name='child' nodeTest='(element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}lnNumType) | element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hdr))'/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='54' part='1' rank='1' minImp='0' slots='0' flags='s' line='258' module='file:/C:/Users/User/Documents/word2styles/tables.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblPrEx)'/>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='12' rank='1' minImp='0' slots='0' flags='s' line='61' module='file:/C:/Users/User/Documents/word2styles/chars.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.microsoft.com/office/word/2003/auxHint}sym)'/>
    <callT role='action' baseUri='file:/C:/Users/User/Documents/word2styles/chars.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='62' name='Q{}symbol' bSlot='6' flags='t'>
     <withParam name='Q{}font' flags='c' as='attribute(Q{http://schemas.microsoft.com/office/word/2003/auxHint}font)?'>
      <axis line='63' name='attribute' nodeTest='attribute(Q{http://schemas.microsoft.com/office/word/2003/auxHint}font)'/>
     </withParam>
     <withParam name='Q{}char' flags='c' as='attribute(Q{http://schemas.microsoft.com/office/word/2003/auxHint}char)?'>
      <axis line='64' name='attribute' nodeTest='attribute(Q{http://schemas.microsoft.com/office/word/2003/auxHint}char)'/>
     </withParam>
     <withParam name='Q{}origin-node' flags='c' as='(document-node()|element())*'>
      <docOrder line='65' intra='1'>
       <slash simple='2'>
        <axis name='parent' nodeTest='(document-node()|element())'/>
        <axis name='parent' nodeTest='(document-node()|element())'/>
       </slash>
      </docOrder>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='6' rank='1' minImp='0' slots='0' flags='s' line='30' module='file:/C:/Users/User/Documents/word2styles/chars.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}br)'/>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/chars.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='&#xA;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='56' rank='2' minImp='0' slots='0' flags='s' line='69' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)'/>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}wordDocument)'/>
     </p.withUpper>
    </p.withUpper>
    <message role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='71'>
     <elem role='select' name='xsl:variable' nsuri='http://www.w3.org/1999/XSL/Transform'>
      <sequence line='72'>
       <att name='name' flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <mergeAdj>
            <sequence>
             <valueOf>
              <fn name='substring'>
               <cvUntyped to='xs:string'>
                <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
               </cvUntyped>
               <int val='1'/>
               <int val='4'/>
              </fn>
             </valueOf>
             <valueOf flags='S'>
              <str val='.style.'/>
             </valueOf>
             <valueOf>
              <fn name='translate'>
               <check card='?' diag='0|0||fn:translate'>
                <cvUntyped to='xs:string'>
                 <data>
                  <slash simple='2'>
                   <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)'/>
                   <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
                  </slash>
                 </data>
                </cvUntyped>
               </check>
               <str val=' '/>
               <str val=''/>
              </fn>
             </valueOf>
            </sequence>
           </mergeAdj>
          </data>
         </convert>
         <str val=''/>
        </fn>
       </att>
       <att line='73' name='select' flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <mergeAdj>
            <sequence>
             <valueOf flags='S'>
              <str val='&#39;'/>
             </valueOf>
             <valueOf>
              <fn name='string-join'>
               <convert from='xs:untypedAtomic' to='xs:string'>
                <data>
                 <slash simple='2'>
                  <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)'/>
                  <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
                 </slash>
                </data>
               </convert>
               <str val=' '/>
              </fn>
             </valueOf>
             <valueOf flags='S'>
              <str val='&#39;'/>
             </valueOf>
            </sequence>
           </mergeAdj>
          </data>
         </convert>
         <str val=''/>
        </fn>
       </att>
      </sequence>
     </elem>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='3' rank='1' minImp='0' slots='0' flags='s' line='54' module='file:/C:/Users/User/Documents/word2styles/block.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pict)'/>
    <sequence role='action' baseUri='file:/C:/Users/User/Documents/word2styles/block.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='55'>
     <choose>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{urn:schemas-microsoft-com:vml}rect)'/>
         <axis name='attribute' nodeTest='attribute(Q{urn:schemas-microsoft-com:office:office}hr)'/>
        </slash>
       </data>
       <str val='t'/>
      </gc>
      <elem line='56' name='hr' nsuri=''>
       <copyOf line='57' flags='vc'>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{urn:schemas-microsoft-com:vml}rect)'/>
         <axis name='attribute' nodeTest='((attribute(Q{}style) | attribute(Q{urn:schemas-microsoft-com:office:office}hralign)) | attribute(Q{}fillcolor))'/>
        </slash>
       </copyOf>
      </elem>
     </choose>
     <choose line='61'>
      <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
       <data>
        <gVarRef name='Q{}export-binary-data' bSlot='7'/>
       </data>
       <str val='1'/>
      </gc>
      <applyT line='62' flags='t' bSlot='8'>
       <axis role='select' name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}binData)'/>
      </applyT>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='51' rank='1' minImp='0' slots='0' flags='s' line='56' module='file:/C:/Users/User/Documents/word2styles/tables.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridSpan)'/>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='11' rank='1' minImp='0' slots='0' flags='s' line='52' module='file:/C:/Users/User/Documents/word2styles/chars.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sym)'/>
    <callT role='action' baseUri='file:/C:/Users/User/Documents/word2styles/chars.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='53' name='Q{}symbol' bSlot='9' flags='t'>
     <withParam name='Q{}font' flags='c' as='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}font)?'>
      <axis line='54' name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}font)'/>
     </withParam>
     <withParam name='Q{}char' flags='c' as='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}char)?'>
      <axis line='55' name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}char)'/>
     </withParam>
     <withParam name='Q{}origin-node' flags='c' as='(document-node()|element())*'>
      <axis line='56' name='parent' nodeTest='(document-node()|element())'/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='1' rank='2' minImp='0' slots='0' flags='s' line='41' module='file:/C:/Users/User/Documents/word2styles/block.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
     <fn baseUri='file:/C:/Users/User/Documents/word2styles/block.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='41' name='empty'>
      <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}r)'/>
     </fn>
    </p.withPredicate>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/block.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='44' name='p' nsuri=''>
     <att name='style' flags='l'>
      <fn name='string-join'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <data>
         <slash line='42' simple='2'>
          <slash simple='2'>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pStyle)'/>
          </slash>
          <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
         </slash>
        </data>
       </convert>
       <str val=' '/>
      </fn>
     </att>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='0' rank='2' minImp='0' slots='1' flags='s' line='29' module='file:/C:/Users/User/Documents/word2styles/block.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
     <axis baseUri='file:/C:/Users/User/Documents/word2styles/block.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='29' name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}r)'/>
    </p.withPredicate>
    <let role='action' baseUri='file:/C:/Users/User/Documents/word2styles/block.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='30' var='Q{}style' as='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)*' slot='0' eval='4'>
     <slash simple='2'>
      <slash simple='2'>
       <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
       <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pStyle)'/>
      </slash>
      <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
     </slash>
     <compElem line='32'>
      <fn role='name' name='concat'>
       <str val='Para.'/>
       <fn name='string-join'>
        <convert from='xs:anyAtomicType' to='xs:string'>
         <choose>
          <fn name='empty'>
           <varRef name='Q{}style' slot='0'/>
          </fn>
          <str val='Normal'/>
          <true/>
          <data>
           <varRef name='Q{}style' slot='0'/>
          </data>
         </choose>
        </convert>
        <str val=' '/>
       </fn>
      </fn>
      <sequence role='content' line='33'>
       <att name='xpath' flags='l'>
        <fn name='path'>
         <dot type='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
        </fn>
       </att>
       <applyT line='34' bSlot='10'>
        <axis role='select' name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
       </applyT>
       <applyT line='35' bSlot='11'>
        <axis role='select' name='child' nodeTest='((element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}r) | element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}fldSimple)) | element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hlink))'/>
       </applyT>
      </sequence>
     </compElem>
    </let>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='59' rank='2' minImp='0' slots='0' flags='s' line='103' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hdr)'/>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sectPr)'/>
      <p.withUpper axis='parent' upFirst='false'>
       <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
       <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
      </p.withUpper>
     </p.withUpper>
    </p.withUpper>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='104' name='Header' nsuri=''>
     <sequence>
      <att name='type' flags='l'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
       </convert>
      </att>
      <callT line='105' name='Q{}xpath-loc' bSlot='12'>
       <withParam name='Q{}node' flags='c' as='item()'>
        <dot line='106' type='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hdr)'/>
       </withParam>
      </callT>
      <applyT line='108' flags='i' bSlot='13'>
       <axis role='select' name='child' nodeTest='node()'/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='47' rank='2' minImp='0' slots='2' flags='s' line='33' module='file:/C:/Users/User/Documents/word2styles/tables.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridCol)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblGrid)'/>
    </p.withUpper>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/tables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='36' name='colspec' nsuri=''>
     <sequence>
      <att name='colname' flags='l'>
       <convert from='xs:double' to='xs:string'>
        <fn name='number'>
         <arith op='+' calc='i+i'>
          <fn name='count'>
           <slash simple='1'>
            <dot type='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridCol)'/>
            <axis name='preceding-sibling' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridCol)'/>
           </slash>
          </fn>
          <int val='1'/>
         </arith>
        </fn>
       </convert>
      </att>
      <att name='colnum' flags='l'>
       <convert from='xs:double' to='xs:string'>
        <fn name='number'>
         <arith op='+' calc='i+i'>
          <fn name='count'>
           <slash simple='1'>
            <dot type='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridCol)'/>
            <axis name='preceding-sibling' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridCol)'/>
           </slash>
          </fn>
          <int val='1'/>
         </arith>
        </fn>
       </convert>
      </att>
      <att name='colwidth' flags='l'>
       <fn name='concat'>
        <convert from='xs:double' to='xs:string'>
         <fn name='round'>
          <fn ns='' name='number'>
           <fn name='number'>
            <fn name='number'>
             <arith10 baseUri='file:/C:/Users/User/Documents/word2styles/tables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' op='*' calc='a*a'>
              <let var='Q{http://saxon.sf.net/}nn1233802103' as='xs:anyAtomicType' slot='0' eval='16'>
               <arith10 op='div' calc='a/a'>
                <fn name='number'>
                 <data>
                  <slash simple='1'>
                   <treat as='node()' diag='14|2|XPTY0020|'>
                    <dot flags='a'/>
                   </treat>
                   <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}w)'/>
                  </slash>
                 </data>
                </fn>
                <let var='Q{http://saxon.sf.net/}nn617113292' as='xs:anyAtomicType' slot='1' eval='8'>
                 <fn name='sum'>
                  <data>
                   <slash simple='2'>
                    <slash simple='2'>
                     <slash simple='1'>
                      <treat as='node()' diag='14|9|XPTY0020|'>
                       <dot flags='a'/>
                      </treat>
                      <axis name='parent' nodeTest='(document-node()|element())'/>
                     </slash>
                     <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridCol)'/>
                    </slash>
                    <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}w)'/>
                   </slash>
                  </data>
                 </fn>
                 <choose>
                  <or op='or'>
                   <or op='or'>
                    <or op='or'>
                     <or op='or'>
                      <or op='or'>
                       <instance of='xs:double?'>
                        <varRef name='Q{http://saxon.sf.net/}nn617113292' slot='1'/>
                       </instance>
                       <instance of='xs:decimal?'>
                        <varRef name='Q{http://saxon.sf.net/}nn617113292' slot='1'/>
                       </instance>
                      </or>
                      <instance of='xs:float?'>
                       <varRef name='Q{http://saxon.sf.net/}nn617113292' slot='1'/>
                      </instance>
                     </or>
                     <instance of='xs:string?'>
                      <varRef name='Q{http://saxon.sf.net/}nn617113292' slot='1'/>
                     </instance>
                    </or>
                    <instance of='xs:untypedAtomic?'>
                     <varRef name='Q{http://saxon.sf.net/}nn617113292' slot='1'/>
                    </instance>
                   </or>
                   <instance of='xs:boolean?'>
                    <varRef name='Q{http://saxon.sf.net/}nn617113292' slot='1'/>
                   </instance>
                  </or>
                  <fn name='number'>
                   <varRef name='Q{http://saxon.sf.net/}nn617113292' slot='1'/>
                  </fn>
                  <true/>
                  <varRef name='Q{http://saxon.sf.net/}nn617113292' slot='1'/>
                 </choose>
                </let>
               </arith10>
               <choose>
                <or op='or'>
                 <or op='or'>
                  <or op='or'>
                   <or op='or'>
                    <or op='or'>
                     <instance of='xs:double?'>
                      <varRef name='Q{http://saxon.sf.net/}nn1233802103' slot='0'/>
                     </instance>
                     <instance of='xs:decimal?'>
                      <varRef name='Q{http://saxon.sf.net/}nn1233802103' slot='0'/>
                     </instance>
                    </or>
                    <instance of='xs:float?'>
                     <varRef name='Q{http://saxon.sf.net/}nn1233802103' slot='0'/>
                    </instance>
                   </or>
                   <instance of='xs:string?'>
                    <varRef name='Q{http://saxon.sf.net/}nn1233802103' slot='0'/>
                   </instance>
                  </or>
                  <instance of='xs:untypedAtomic?'>
                   <varRef name='Q{http://saxon.sf.net/}nn1233802103' slot='0'/>
                  </instance>
                 </or>
                 <instance of='xs:boolean?'>
                  <varRef name='Q{http://saxon.sf.net/}nn1233802103' slot='0'/>
                 </instance>
                </or>
                <fn name='number'>
                 <varRef name='Q{http://saxon.sf.net/}nn1233802103' slot='0'/>
                </fn>
                <true/>
                <varRef name='Q{http://saxon.sf.net/}nn1233802103' slot='0'/>
               </choose>
              </let>
              <dbl val='100'/>
             </arith10>
            </fn>
           </fn>
          </fn>
         </fn>
        </convert>
        <str val='%'/>
       </fn>
      </att>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='4' rank='1' minImp='0' slots='0' flags='s' line='66' module='file:/C:/Users/User/Documents/word2styles/block.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}binData)'/>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='42' rank='1' minImp='0' slots='0' flags='s' line='30' module='file:/C:/Users/User/Documents/word2styles/notes.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}footnoteRef)'/>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/notes.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='31' name='footnoteRef' nsuri=''>
     <empty/>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='5' rank='1' minImp='0' slots='0' flags='s' line='72' module='file:/C:/Users/User/Documents/word2styles/block.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}fldSimple)'/>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/block.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='73' name='field' nsuri=''>
     <sequence>
      <att name='instr' flags='l'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}instr' chk='0'/>
       </convert>
      </att>
      <applyT flags='i' bSlot='14'>
       <axis role='select' name='child' nodeTest='node()'/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='8' rank='1' minImp='0' slots='0' flags='s' line='40' module='file:/C:/Users/User/Documents/word2styles/chars.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tab)'/>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/chars.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='&#x9;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='57' rank='2' minImp='0' slots='0' flags='s' line='77' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.microsoft.com/office/word/2003/auxHint}sect)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)'/>
    </p.withUpper>
    <sequence role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='78'>
     <choose>
      <fn name='exists'>
       <slash simple='2'>
        <slash simple='2'>
         <slash simple='2'>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
         </slash>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sectPr)'/>
        </slash>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}lnNumType)'/>
       </slash>
      </fn>
      <callT line='79' name='Q{}debug' bSlot='15'>
       <withParam name='Q{}msg' flags='c' as='document-node()'>
        <doc line='80' base='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' flags='t' validation='preserve'>
         <sequence>
          <valueOf flags='l'>
           <str val='+++LINE-NUMBERING USED IN SECTION ['/>
          </valueOf>
          <valueOf flags='l'>
           <convert from='xs:integer' to='xs:string'>
            <fn name='position'/>
           </convert>
          </valueOf>
          <valueOf flags='Sl'>
           <str val=']+++'/>
          </valueOf>
         </sequence>
        </doc>
       </withParam>
      </callT>
     </choose>
     <choose line='84'>
      <gVarRef name='Q{}preserve-section-wrappers' bSlot='16'/>
      <elem line='85' name='sect' nsuri=''>
       <sequence line='86'>
        <applyT bSlot='17'>
         <slash role='select' simple='2'>
          <slash simple='2'>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
          </slash>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sectPr)'/>
         </slash>
        </applyT>
        <applyT line='88' flags='i' bSlot='18'>
         <axis role='select' name='child' nodeTest='node()'/>
        </applyT>
       </sequence>
      </elem>
      <true/>
      <applyT line='92' flags='ti' bSlot='19'>
       <axis role='select' name='child' nodeTest='node()'/>
      </applyT>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='46' rank='1' minImp='0' slots='0' flags='s' line='21' module='file:/C:/Users/User/Documents/word2styles/tables.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tbl)'/>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/tables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='22' name='table' nsuri=''>
     <elem line='23' name='tgroup' nsuri='' flags='l'>
      <sequence>
       <att name='cols' flags='l'>
        <convert from='xs:integer' to='xs:string'>
         <fn name='count'>
          <slash simple='2'>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblGrid)'/>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridCol)'/>
          </slash>
         </fn>
        </convert>
       </att>
       <applyT line='25' bSlot='20'>
        <slash role='select' simple='2'>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblGrid)'/>
         <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridCol)'/>
        </slash>
       </applyT>
       <elem line='27' name='tbody' nsuri='' flags='l'>
        <applyT bSlot='21'>
         <axis role='select' name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)'/>
        </applyT>
       </elem>
      </sequence>
     </elem>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='54' rank='1' minImp='0' slots='0' flags='s' line='258' module='file:/C:/Users/User/Documents/word2styles/tables.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblPr)'/>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='39' rank='2' minImp='0' slots='0' flags='s' line='217' module='file:/C:/Users/User/Documents/word2styles/inline.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}t)'/>
     <filter baseUri='file:/C:/Users/User/Documents/word2styles/inline.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='217' flags='b'>
      <axis name='preceding-sibling' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
      <fn name='exists'>
       <axis name='child' nodeTest='element(Q{http://schemas.microsoft.com/office/word/2003/auxHint}sym)'/>
      </fn>
     </filter>
    </p.withPredicate>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='38' rank='2' minImp='0' slots='0' flags='s' line='212' module='file:/C:/Users/User/Documents/word2styles/inline.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}t)'/>
     <filter baseUri='file:/C:/Users/User/Documents/word2styles/inline.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='212' flags='b'>
      <slash simple='2'>
       <slash simple='2'>
        <axis name='parent' nodeTest='(document-node()|element())'/>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
       </slash>
       <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}caps)'/>
      </slash>
      <or op='or'>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val' chk='0'/>
        </cast>
        <str val='on'/>
       </vc>
       <fn name='empty'>
        <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
       </fn>
      </or>
     </filter>
    </p.withPredicate>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/inline.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='213'>
     <fn name='upper-case'>
      <cvUntyped to='xs:string'>
       <data>
        <dot type='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}t)'/>
       </data>
      </cvUntyped>
     </fn>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='37' rank='1' minImp='0' slots='0' flags='s' line='207' module='file:/C:/Users/User/Documents/word2styles/inline.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}t)'/>
    <applyT role='action' baseUri='file:/C:/Users/User/Documents/word2styles/inline.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='208' flags='ti' bSlot='22'>
     <axis role='select' name='child' nodeTest='node()'/>
    </applyT>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='2' rank='1' minImp='0' slots='0' flags='s' line='48' module='file:/C:/Users/User/Documents/word2styles/block.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='60' rank='2' minImp='0' slots='0' flags='s' line='114' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ftr)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sectPr)'/>
    </p.withUpper>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='115' name='Footer' nsuri=''>
     <sequence>
      <att name='type' flags='l'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}type' chk='0'/>
       </convert>
      </att>
      <callT line='116' name='Q{}xpath-loc' bSlot='23'>
       <withParam name='Q{}node' flags='c' as='item()'>
        <dot line='117' type='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ftr)'/>
       </withParam>
      </callT>
      <applyT line='119' flags='i' bSlot='24'>
       <axis role='select' name='child' nodeTest='node()'/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='44' rank='1' minImp='0' slots='0' flags='s' line='38' module='file:/C:/Users/User/Documents/word2styles/notes.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}footnote)'/>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/notes.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='39' name='footnote' nsuri=''>
     <sequence line='40'>
      <choose>
       <vc op='eq' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}suppressRef' chk='0'/>
        </cast>
        <str val='on'/>
       </vc>
       <att line='41' name='suppressRef' flags='l'>
        <str val='1'/>
       </att>
      </choose>
      <applyT line='43' flags='i' bSlot='25'>
       <axis role='select' name='child' nodeTest='node()'/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='50' rank='1' minImp='0' slots='0' flags='s' line='51' module='file:/C:/Users/User/Documents/word2styles/tables.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)'/>
    <applyT role='action' baseUri='file:/C:/Users/User/Documents/word2styles/tables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='52' flags='t' bSlot='26'>
     <axis role='select' name='child' nodeTest='(element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridSpan) | element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vmerge))'/>
    </applyT>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='10' rank='1' minImp='0' slots='0' flags='s' line='48' module='file:/C:/Users/User/Documents/word2styles/chars.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}softHyphen)'/>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/chars.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='­'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='62' rank='2' minImp='0' slots='0' flags='s' line='131' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}lnNumType)'/>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sectPr)'/>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)'/>
     </p.withUpper>
    </p.withUpper>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='61' rank='2' minImp='0' slots='0' flags='s' line='126' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}lnNumType)'/>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sectPr)'/>
      <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)'/>
     </p.withUpper>
    </p.withUpper>
    <sequence role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='127'>
     <att name='numberLines'>
      <str val='1'/>
     </att>
     <applyT line='128' flags='t' bSlot='27'>
      <axis role='select' name='attribute' nodeTest='((attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}count-by) | attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}start)) | attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}restart))'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='40' rank='1' minImp='0' slots='0' flags='s' line='219' module='file:/C:/Users/User/Documents/word2styles/inline.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.microsoft.com/office/word/2003/auxHint}font)'/>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='7' rank='1' minImp='0' slots='0' flags='s' line='35' module='file:/C:/Users/User/Documents/word2styles/chars.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}cr)'/>
    <valueOf role='action' baseUri='file:/C:/Users/User/Documents/word2styles/chars.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='-1'>
     <str val='&#xD;'/>
    </valueOf>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='64' rank='2' minImp='0' slots='0' flags='s' line='142' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.simPos test='element(Q{urn:schemas-microsoft-com:office:office}SmartTagType)' pos='1'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}wordDocument)'/>
    </p.withUpper>
    <sequence role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='143'>
     <callT name='Q{}warn' bSlot='28'>
      <withParam name='Q{}msg' flags='c' as='xs:string'>
       <str val='document contains SmartTags'/>
      </withParam>
     </callT>
     <callT line='147' name='Q{}xpath-loc' bSlot='29' flags='t'>
      <withParam name='Q{}node' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)*'>
       <slash line='149'>
        <slash simple='2'>
         <slash simple='2'>
          <axis name='parent' nodeTest='(document-node()|element())'/>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)'/>
         </slash>
         <axis name='child' nodeTest='element(Q{http://schemas.microsoft.com/office/word/2003/auxHint}sect)'/>
        </slash>
        <first>
         <filter flags='b'>
          <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
          <fn name='boolean'>
           <fn name='normalize-space'>
            <cvUntyped to='xs:string'>
             <data>
              <dot type='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
             </data>
            </cvUntyped>
           </fn>
          </fn>
         </filter>
        </first>
       </slash>
      </withParam>
      <withParam name='Q{}pi-target' flags='c' as='xs:string'>
       <str val='smart-tags-on'/>
      </withParam>
     </callT>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='45' rank='1' minImp='0' slots='0' flags='s' line='47' module='file:/C:/Users/User/Documents/word2styles/notes.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}endnote)'/>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/notes.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='48' name='endnote' nsuri=''>
     <empty/>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='52' rank='1' minImp='0' slots='1' flags='s' line='77' module='file:/C:/Users/User/Documents/word2styles/tables.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vmerge)'/>
    <sequence role='action' baseUri='file:/C:/Users/User/Documents/word2styles/tables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='78'>
     <att name='vspan'>
      <convert line='80' from='xs:untypedAtomic' to='xs:string'>
       <choose>
        <vc op='eq' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val' chk='0'/>
         </cast>
         <str val='restart'/>
        </vc>
        <atomic val='start' type='xs:untypedAtomic'/>
        <true/>
        <atomic val='continue' type='xs:untypedAtomic'/>
       </choose>
      </convert>
     </att>
     <choose line='86'>
      <fn name='empty'>
       <slash simple='2'>
        <axis name='parent' nodeTest='(document-node()|element())'/>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridSpan)'/>
       </slash>
      </fn>
      <let line='87' var='Q{}colnum' as='document-node()' slot='0' eval='16'>
       <doc line='88' base='file:/C:/Users/User/Documents/word2styles/tables.xsl' validation='preserve'>
        <callT name='Q{}colnum' bSlot='30'/>
       </doc>
       <sequence line='90'>
        <att name='namest'>
         <convert line='91' from='xs:double' to='xs:string'>
          <arith10 op='+' calc='d+d'>
           <fn name='number'>
            <data>
             <varRef name='Q{}colnum' slot='0'/>
            </data>
           </fn>
           <dbl val='1'/>
          </arith10>
         </convert>
        </att>
        <att line='93' name='nameend'>
         <convert line='94' from='xs:double' to='xs:string'>
          <arith10 op='+' calc='d+d'>
           <fn name='number'>
            <data>
             <varRef name='Q{}colnum' slot='0'/>
            </data>
           </fn>
           <dbl val='1'/>
          </arith10>
         </convert>
        </att>
       </sequence>
      </let>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='36' rank='2' minImp='0' slots='0' flags='s' line='30' module='file:/C:/Users/User/Documents/word2styles/inline.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}r)'/>
     <fn baseUri='file:/C:/Users/User/Documents/word2styles/inline.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='30' name='boolean'>
      <fn name='normalize-space'>
       <fn name='string'>
        <dot type='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}r)'/>
       </fn>
      </fn>
     </fn>
    </p.withPredicate>
    <callT role='action' baseUri='file:/C:/Users/User/Documents/word2styles/inline.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='45' name='Q{}inline-styles' bSlot='31' flags='t'>
     <withParam name='Q{}style' flags='c' as='attribute()*'>
      <slash line='43' simple='2'>
       <slash simple='2'>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rStyle)'/>
       </slash>
       <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
      </slash>
     </withParam>
     <withParam name='Q{}bold' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}b)*'>
      <slash line='47' simple='2'>
       <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
       <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}b)'/>
      </slash>
     </withParam>
     <withParam name='Q{}italic' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}i)*'>
      <slash line='48' simple='2'>
       <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
       <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}i)'/>
      </slash>
     </withParam>
     <withParam name='Q{}sc' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}smallCaps)*'>
      <filter line='49' flags='b'>
       <slash simple='2'>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}smallCaps)'/>
       </slash>
       <or op='or'>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val' chk='0'/>
         </cast>
         <str val='on'/>
        </vc>
        <fn name='empty'>
         <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
        </fn>
       </or>
      </filter>
     </withParam>
     <withParam name='Q{}ul' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}u)*'>
      <filter line='50' flags='b'>
       <slash simple='2'>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}u)'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val' chk='0'/>
        </cast>
        <str val='single'/>
       </vc>
      </filter>
     </withParam>
     <withParam name='Q{}subSup' flags='c' as='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)*'>
      <slash line='51' simple='2'>
       <slash simple='2'>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vertAlign)'/>
       </slash>
       <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
      </slash>
     </withParam>
     <withParam name='Q{}vanish' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vanish)*'>
      <filter line='52' flags='b'>
       <slash simple='2'>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
        <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vanish)'/>
       </slash>
       <or op='or'>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val' chk='0'/>
         </cast>
         <str val='on'/>
        </vc>
        <fn name='empty'>
         <axis name='attribute' nodeTest='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)'/>
        </fn>
       </or>
      </filter>
     </withParam>
     <withParam name='Q{}highlight' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}highlight)*'>
      <slash line='53' simple='2'>
       <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)'/>
       <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}highlight)'/>
      </slash>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='48' rank='1' minImp='0' slots='0' flags='s' line='39' module='file:/C:/Users/User/Documents/word2styles/tables.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)'/>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/tables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='40' name='row' nsuri=''>
     <applyT flags='i' bSlot='32'>
      <axis role='select' name='child' nodeTest='node()'/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='43' rank='1' minImp='0' slots='0' flags='s' line='34' module='file:/C:/Users/User/Documents/word2styles/notes.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}endnoteRef)'/>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/notes.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='35' name='endnoteRef' nsuri=''>
     <empty/>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='41' rank='1' minImp='0' slots='0' flags='s' line='223' module='file:/C:/Users/User/Documents/word2styles/inline.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hlink)'/>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/inline.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags asdp=http://ns.andrewsales.com/xslt/functions v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='224' name='url' nsuri=''>
     <sequence>
      <att name='address' flags='l'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <attVal name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}dest' chk='0'/>
       </convert>
      </att>
      <callT line='225' name='Q{}xpath-loc' bSlot='33'>
       <withParam name='Q{}node' flags='c' as='item()'>
        <dot line='226' type='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hlink)'/>
       </withParam>
      </callT>
      <valueOf line='228' flags='l'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <data>
         <dot type='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hlink)'/>
        </data>
       </convert>
      </valueOf>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='65' rank='2' minImp='0' slots='0' flags='s' line='157' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.simPos role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}proofErr)' pos='1'/>
    <sequence role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='158'>
     <callT name='Q{}warn' bSlot='34'>
      <withParam name='Q{}msg' flags='c' as='xs:string'>
       <str val='document contains proofing errors'/>
      </withParam>
     </callT>
     <callT line='162' name='Q{}xpath-loc' bSlot='35' flags='t'>
      <withParam name='Q{}node' flags='c' as='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)*'>
       <docOrder line='164' intra='1'>
        <slash>
         <docOrder intra='1'>
          <slash simple='2'>
           <slash simple='1'>
            <root/>
            <axis name='descendant' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)'/>
           </slash>
           <axis name='child' nodeTest='element(Q{http://schemas.microsoft.com/office/word/2003/auxHint}sect)'/>
          </slash>
         </docOrder>
         <first>
          <filter flags='b'>
           <axis name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
           <fn name='boolean'>
            <fn name='normalize-space'>
             <cvUntyped to='xs:string'>
              <data>
               <dot type='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)'/>
              </data>
             </cvUntyped>
            </fn>
           </fn>
          </filter>
         </first>
        </slash>
       </docOrder>
      </withParam>
      <withParam name='Q{}pi-target' flags='c' as='xs:string'>
       <str val='proofing-errs-present'/>
      </withParam>
     </callT>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='49' rank='1' minImp='0' slots='0' flags='s' line='43' module='file:/C:/Users/User/Documents/word2styles/tables.xsl'>
    <p.nodeTest role='match' test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)'/>
    <elem role='action' baseUri='file:/C:/Users/User/Documents/word2styles/tables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='44' name='entry' nsuri=''>
     <sequence line='45'>
      <applyT bSlot='36'>
       <axis role='select' name='child' nodeTest='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)'/>
      </applyT>
      <applyT line='46' flags='i' bSlot='37'>
       <axis role='select' name='child' nodeTest='node()'/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='63' rank='2' minImp='0' slots='0' flags='s' line='135' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}count-by)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}lnNumType)'/>
    </p.withUpper>
    <compAtt role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='136'>
     <fn role='name' name='local-name'>
      <dot type='attribute()'/>
     </fn>
     <convert role='select' from='xs:untypedAtomic' to='xs:string'>
      <data>
       <dot type='attribute()'/>
      </data>
     </convert>
    </compAtt>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='63' part='2' rank='2' minImp='0' slots='0' flags='s' line='135' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}restart)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}lnNumType)'/>
    </p.withUpper>
    <compAtt role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='136'>
     <fn role='name' name='local-name'>
      <dot type='attribute()'/>
     </fn>
     <convert role='select' from='xs:untypedAtomic' to='xs:string'>
      <data>
       <dot type='attribute()'/>
      </data>
     </convert>
    </compAtt>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='63' part='1' rank='2' minImp='0' slots='0' flags='s' line='135' module='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.nodeTest test='attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}start)'/>
     <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}lnNumType)'/>
    </p.withUpper>
    <compAtt role='action' baseUri='file:/C:/Users/User/Documents/word2styles/styles2elems.xsl' ns='xsl=~ dt=uuid:C2F41010-65B3-11d1-A29F-00AA00C14882 aml=http://schemas.microsoft.com/aml/2001/core wx=http://schemas.microsoft.com/office/word/2003/auxHint st1=urn:schemas-microsoft-com:office:smarttags v=urn:schemas-microsoft-com:vml w=http://schemas.openxmlformats.org/wordprocessingml/2006/main w10=urn:schemas-microsoft-com:office:word sl=http://schemas.microsoft.com/schemaLibrary/2003/core o=urn:schemas-microsoft-com:office:office' line='136'>
     <fn role='name' name='local-name'>
      <dot type='attribute()'/>
     </fn>
     <convert role='select' from='xs:untypedAtomic' to='xs:string'>
      <data>
       <dot type='attribute()'/>
      </data>
     </convert>
    </compAtt>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name='Q{}word-styles' line='25' module='file:/C:/Users/User/Documents/word2styles/variables.xsl' binds='' flags='u'>
  <p.nodeTest test='element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)'/>
  <attVal baseUri='file:/C:/Users/User/Documents/word2styles/variables.xsl' ns='xsl=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='25' name='Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styleId' chk='0'/>
 </key>
 <key name='Q{}word-chars' line='19' module='file:/C:/Users/User/Documents/word2styles/word-utils.xsl' binds='' flags='u'>
  <p.withUpper axis='parent' upFirst='false'>
   <p.nodeTest test='element(Q{}word)'/>
   <p.withUpper axis='parent' upFirst='false'>
    <p.nodeTest test='element(Q{}char)'/>
    <p.withUpper axis='parent' upFirst='false'>
     <p.nodeTest test='element(Q{}font)'/>
     <p.nodeTest test='element(Q{}chars)'/>
    </p.withUpper>
   </p.withUpper>
  </p.withUpper>
  <data baseUri='file:/C:/Users/User/Documents/word2styles/word-utils.xsl' ns='xsl=~ asdp=http://ns.andrewsales.com/xslt/functions xs=~ w=http://schemas.openxmlformats.org/wordprocessingml/2006/main' line='19'>
   <dot type='element(Q{}word)'/>
  </data>
 </key>
 <output>
  <property name='doctype-system' value='style-schema.dtd'/>
  <property name='indent' value='no'/>
  <property name='{http://saxon.sf.net/}stylesheet-version' value='20'/>
 </output>
 <decimalFormat/>
</package>
<?Σ 91e5c28?>
